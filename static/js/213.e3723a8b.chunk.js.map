{"version":3,"file":"static/js/213.e3723a8b.chunk.js","mappings":"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","sources":["components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.sc.js","components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.js","components/UI/DeliveryAddress/DeliveryAddress.js","containers/OrderDetails/OrderDetails.sc.js","containers/OrderDetails/OrderDetails.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport FlexWrapper from '../UI/FlexWrapper';\r\n\r\nexport const Wrapper = styled(FlexWrapper)`\r\n  padding-top: ${({ theme }) => theme.spacings.level3};\r\n\r\n  &:last-child {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const NameAndPrice = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-right: ${({ theme }) => theme.spacings.level1};\r\n  }\r\n\r\n  & .name {\r\n    flex: 2;\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n\r\n    & > a {\r\n      transition: color ${({ theme }) => theme.durations.level1}s;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.green};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    align-items: start;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-right: 0;\r\n      margin-bottom: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n\r\n    & .name {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Price = styled(FlexWrapper)`\r\n  @media only screen and (max-width: 56.25em) {\r\n    flex: initial;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './TransactionAndOrderProdItem.sc';\r\nimport theme from '../../styled/theme';\r\nimport ProductThumbnail from '../UI/ProductThumbnail/ProductThumbnail';\r\nimport PlainText from '../UI/PlainText';\r\nimport { formatPrice, roundOverallPrice } from '../../shared/utility/utility';\r\n\r\nconst TransactionAndOrderProdItem = React.memo(({ data, orderId }) => {\r\n  const { _id: productId, name, price, quantity, photo } = data;\r\n\r\n  const roundedOverallPrice = roundOverallPrice(price * quantity);\r\n\r\n  return (\r\n    <SC.Wrapper spacing=\"2\" data-testid=\"TransactionAndOrderProdItem\">\r\n      <Link\r\n        to={`/product/${productId}`}\r\n        data-testid=\"TransactionAndOrderProdItem-product-link-photo\"\r\n      >\r\n        <ProductThumbnail\r\n          photo={photo}\r\n          alt={name}\r\n          productId={productId}\r\n          width=\"5\"\r\n          height=\"5\"\r\n          orderId={orderId}\r\n        />\r\n      </Link>\r\n      <SC.NameAndPrice>\r\n        <span className=\"name\">\r\n          <Link\r\n            to={`/product/${productId}`}\r\n            data-testid=\"TransactionAndOrderProdItem-product-link-name\"\r\n          >\r\n            {name}\r\n          </Link>\r\n        </span>\r\n        <SC.Price justify=\"space-between\" align=\"center\" flex=\"1\">\r\n          <PlainText\r\n            size=\"2\"\r\n            color={theme.colors.light4}\r\n            data-testid=\"TransactionAndOrderProdItem-product-price-per-piece\"\r\n          >\r\n            {`${quantity} x ${formatPrice(price)}`}\r\n          </PlainText>\r\n          <PlainText size=\"4\" data-testid=\"TransactionAndOrderProdItem-product-overall-price\">\r\n            {formatPrice(roundedOverallPrice)}\r\n          </PlainText>\r\n        </SC.Price>\r\n      </SC.NameAndPrice>\r\n    </SC.Wrapper>\r\n  );\r\n});\r\n\r\nTransactionAndOrderProdItem.defaultProps = {\r\n  orderId: '',\r\n};\r\n\r\nTransactionAndOrderProdItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    photo: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  orderId: PropTypes.string,\r\n};\r\n\r\nexport default TransactionAndOrderProdItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FlexWrapper from '../FlexWrapper';\r\nimport PlainText from '../PlainText';\r\nimport * as propTypes from '../../../shared/propTypes';\r\n\r\nexport default function DeliveryAddress({ data }) {\r\n  const { firstName, lastName, street, zipCode, city, country, phone } = data;\r\n\r\n  const rowValues = [`${firstName} ${lastName}`, street, `${zipCode} ${city}`, country, phone];\r\n\r\n  return (\r\n    <FlexWrapper direction=\"column\" spacing=\"1\">\r\n      {rowValues.map((value, idx) => (\r\n        <PlainText key={idx} size=\"3\" wordBreak=\"break-all\">\r\n          {value}\r\n        </PlainText>\r\n      ))}\r\n    </FlexWrapper>\r\n  );\r\n}\r\n\r\nDeliveryAddress.propTypes = {\r\n  data: PropTypes.shape(propTypes.deliveryAddressStrings).isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Wrapper = styled.div`\r\n  font-size: ${({ theme }) => theme.fontSizes.level3};\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  width: 80rem;\r\n`;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport * as SC from './OrderDetails.sc';\r\nimport PlainPanel from '../../components/UI/Panels/PlainPanel';\r\nimport Heading from '../../components/UI/Heading/Heading';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport PlainText from '../../components/UI/PlainText';\r\nimport FlexWrapper from '../../components/UI/FlexWrapper';\r\nimport TransactionAndOrderProdItem from '../../components/TransactionAndOrderProdItem/TransactionAndOrderProdItem';\r\nimport DeliveryAddress from '../../components/UI/DeliveryAddress/DeliveryAddress';\r\nimport { formatOrderDate, formatPrice, scrollToTop } from '../../shared/utility/utility';\r\nimport { GreenText } from '../../styled/components';\r\nimport theme from '../../styled/theme';\r\nimport MetaDescriptor from '../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function OrderDetails() {\r\n  const { id: orderId } = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.auth.orderDetails);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOrderDetails = useCallback(\r\n    (id) => dispatch(actions.fetchOrderDetails(id)),\r\n    [dispatch],\r\n  );\r\n  const onSetOrderDetails = useCallback(() => dispatch(actions.setOrderDetails()), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onFetchOrderDetails(orderId);\r\n    scrollToTop();\r\n    return () => onSetOrderDetails();\r\n  }, [orderId, onFetchOrderDetails, onSetOrderDetails]);\r\n\r\n  let content = <Loader align=\"center\" />;\r\n  if (orderDetails === null) {\r\n    content = (\r\n      <Heading variant=\"h4\" align=\"center\" lineHeight=\"4\" data-testid=\"OrderDetails-error\">\r\n        There is a problem to fetch order details or given order does not exist\r\n      </Heading>\r\n    );\r\n  } else if (orderDetails) {\r\n    const { _id, seller, buyer, deliveryAddress, products, overallPrice, createdAt } = orderDetails;\r\n\r\n    const generalInfoSection = (\r\n      <div data-testid=\"OrderDetails-general-info-section\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          General info\r\n        </Heading>\r\n        <FlexWrapper direction=\"column\" spacing=\"1\">\r\n          <div>\r\n            <PlainText weight=\"700\">Order number:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">{_id}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText weight=\"700\">Transaction date:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">{formatOrderDate(createdAt)}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText weight=\"700\">Buyer:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">\r\n              {buyer ? (\r\n                <Link to={`/user/${buyer.username}?p=1`} data-testid=\"OrderDetails-buyer-link\">\r\n                  <GreenText>{buyer.username}</GreenText>\r\n                </Link>\r\n              ) : (\r\n                <i data-testid=\"OrderDetails-buyer-deleted\">(account has been deleted)</i>\r\n              )}\r\n            </PlainText>\r\n          </div>\r\n        </FlexWrapper>\r\n      </div>\r\n    );\r\n\r\n    const infoAboutSellerSection = (\r\n      <div data-testid=\"OrderDetails-info-about-seller\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          Info about seller\r\n        </Heading>\r\n        {seller ? (\r\n          <FlexWrapper direction=\"column\" spacing=\"1\" data-test=\"OrderDetails-seller-info\">\r\n            <div data-testid=\"OrderDetails-seller-username\">\r\n              <PlainText weight=\"700\">Username:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">\r\n                <Link to={`/user/${seller.username}?p=1`} data-testid=\"OrderDetails-seller-link\">\r\n                  <GreenText>{seller.username}</GreenText>\r\n                </Link>\r\n              </PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-email\">\r\n              <PlainText weight=\"700\">Email:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">{seller.email}</PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-phone\">\r\n              <PlainText weight=\"700\">Phone:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">{seller.phone}</PlainText>\r\n            </div>\r\n          </FlexWrapper>\r\n        ) : (\r\n          <i data-testid=\"OrderDetails-seller-deleted\">(account has been deleted)</i>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const deliveryAddressSection = (\r\n      <div data-testid=\"OrderDetails-delivery-address-section\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          Delivery address\r\n        </Heading>\r\n        <DeliveryAddress data={deliveryAddress} />\r\n      </div>\r\n    );\r\n\r\n    const productsSection = (\r\n      <>\r\n        <Heading variant=\"h4\" mgTop=\"3\">\r\n          Products\r\n        </Heading>\r\n        {products.map((product) => (\r\n          <TransactionAndOrderProdItem key={product._id} data={product} orderId={_id} />\r\n        ))}\r\n        <PlainText display=\"block\" mgTop=\"3\" textAlign=\"right\">\r\n          <PlainText color={theme.colors.light4} spacing=\"1px\" mgRight=\"1\">\r\n            TOTAL\r\n          </PlainText>\r\n          <PlainText size=\"5\">{formatPrice(overallPrice)}</PlainText>\r\n        </PlainText>\r\n      </>\r\n    );\r\n\r\n    content = (\r\n      <SC.Wrapper>\r\n        <PlainPanel>\r\n          <FlexWrapper direction=\"column\" spacing=\"3\">\r\n            {generalInfoSection}\r\n            {infoAboutSellerSection}\r\n            {deliveryAddressSection}\r\n          </FlexWrapper>\r\n          {productsSection}\r\n        </PlainPanel>\r\n      </SC.Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor title=\"Order details - E-Shopping\" />\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","FlexWrapper","_templateObject","_taggedTemplateLiteral","_ref","theme","spacings","level3","NameAndPrice","div","_templateObject2","_ref2","level1","_ref3","fontSizes","_ref4","durations","_ref5","colors","green","_ref6","Price","_templateObject3","TransactionAndOrderProdItem","React","data","orderId","_id","productId","name","price","quantity","photo","roundedOverallPrice","roundOverallPrice","_jsxs","SC","spacing","children","_jsx","Link","to","concat","ProductThumbnail","alt","width","height","className","justify","align","flex","PlainText","size","color","light4","formatPrice","defaultProps","DeliveryAddress","firstName","lastName","street","zipCode","city","country","phone","rowValues","direction","map","value","idx","wordBreak","OrderDetails","id","useParams","orderDetails","useSelector","state","auth","dispatch","useDispatch","onFetchOrderDetails","useCallback","actions","onSetOrderDetails","useEffect","scrollToTop","content","Loader","Heading","variant","lineHeight","seller","buyer","deliveryAddress","products","overallPrice","createdAt","generalInfoSection","mgBottom","weight","formatOrderDate","username","GreenText","infoAboutSellerSection","email","deliveryAddressSection","productsSection","_Fragment","mgTop","product","display","textAlign","mgRight","PlainPanel","MetaDescriptor","title"],"sourceRoot":""}