{"version":3,"file":"static/js/931.a76df760.chunk.js","mappings":"kRAYe,SAASA,EAASC,GAAgC,IAA/B,MAAEC,EAAK,SAAEC,EAAQ,QAAEC,GAASH,EAC5D,MACEI,QAAUC,SAAUC,IAClBL,GACE,OAAEM,GAAWL,EAEbM,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,UAChDC,EAAiC,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaH,SACnCS,GAAYL,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKG,YAC9CC,GAAkBN,EAAAA,EAAAA,KAAaC,GAAUA,EAAMM,GAAGD,kBAElDE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,cACtBf,GAAaY,EAASI,EAAAA,GAAuBhB,KAC9C,CAACY,IAEGK,GAAiBF,EAAAA,EAAAA,cAAaG,GAASN,EAASI,EAAAA,GAAqBE,KAAQ,CAACN,IAC9EO,GAAkBJ,EAAAA,EAAAA,cACtB,CAACK,EAAaC,EAAUrB,IACtBY,EAASI,EAAAA,GAAsBI,EAAaC,EAAUrB,KACxD,CAACY,KAGHU,EAAAA,EAAAA,YAAU,KACJrB,IAAsBO,EACxBV,EAAQyB,QAAQ,qBAEhBT,EAAiBb,GACjBkB,EAAgBjB,EAAQsB,EAAAA,GAAaC,cAAexB,IACpDyB,EAAAA,EAAAA,OAEK,IAAMT,OAAeU,KAC3B,CACD1B,EACAO,EACAM,EACAK,EACAT,EACAO,EACAf,EACAJ,IAGF,IAAI8B,EAAY,uCACZC,GAAUC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,WAC5B,GAAkB,OAAdvB,EACFmB,EAAY,8BACZC,GACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,QAAQ,KAAKF,MAAM,SAASG,WAAW,IAAI,cAAY,kBAAiBC,SAAC,sEAI/E,GAAI3B,EAAW,CACpB,MAAM,SAAET,EAAQ,MAAEqC,EAAK,MAAEC,GAAU7B,EAEnCmB,EAAS,SAAAW,OAAYtC,EAAiB,kBAEtC,IAAIuC,GACFV,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,QAAQ,KAAKO,SAAS,IAAI,cAAY,yBAAwBL,SAAC,mDAItEC,GAASC,KACXE,GACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,KAAK,OAAOH,SAAS,IAAII,QAAQ,IAAGT,SAAA,CAC9CC,IACCK,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,KAAK,IAAI,cAAY,0BAAyBX,SAAA,EACvDN,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACE,OAAO,MAAKZ,SAAC,eACvBC,KAGJC,IACCI,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,KAAK,IAAI,cAAY,0BAAyBX,SAAA,EACvDN,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACE,OAAO,MAAKZ,SAAC,sBACvBE,SAOXT,GACEa,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAb,SAAA,EACEN,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,QAAQ,KAAIE,SAAEpC,IACtBwC,GACDV,EAAAA,EAAAA,KAACoB,EAAAA,EAAkB,CAACC,KAAM3B,EAAAA,GAAaC,kBAG7C,CAEA,OACEiB,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAb,SAAA,EACEN,EAAAA,EAAAA,KAACsB,EAAAA,EAAc,CACbC,MAAOzB,EACP0B,YAAY,4DAEbzB,IAGP,C","sources":["containers/OtherUser/OtherUser.js"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Heading from '../../components/UI/Heading/Heading';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport PlainText from '../../components/UI/PlainText';\r\nimport ProductsAndFilters from '../../components/ProductsAndFilters/ProductsAndFilters';\r\nimport { productPages } from '../../shared/constants';\r\nimport FlexWrapper from '../../components/UI/FlexWrapper';\r\nimport { scrollToTop } from '../../shared/utility/utility';\r\nimport MetaDescriptor from '../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function OtherUser({ match, location, history }) {\r\n  const {\r\n    params: { username: otherUserUsername },\r\n  } = match;\r\n  const { search } = location;\r\n\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n  const currentUserUsername = userProfile?.username;\r\n  const otherUser = useSelector((state) => state.auth.otherUser);\r\n  const productsPerPage = useSelector((state) => state.ui.productsPerPage);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOtherUser = useCallback(\r\n    (username) => dispatch(actions.fetchOtherUser(username)),\r\n    [dispatch],\r\n  );\r\n  const onSetOtherUser = useCallback((user) => dispatch(actions.setOtherUser(user)), [dispatch]);\r\n  const onFetchProducts = useCallback(\r\n    (queryParams, pageType, username) =>\r\n      dispatch(actions.fetchProducts(queryParams, pageType, username)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (otherUserUsername === currentUserUsername) {\r\n      history.replace('/my-account/data');\r\n    } else {\r\n      onFetchOtherUser(otherUserUsername);\r\n      onFetchProducts(search, productPages.USER_PRODUCTS, otherUserUsername);\r\n      scrollToTop();\r\n    }\r\n    return () => onSetOtherUser(undefined);\r\n  }, [\r\n    otherUserUsername,\r\n    currentUserUsername,\r\n    onFetchOtherUser,\r\n    onFetchProducts,\r\n    productsPerPage,\r\n    onSetOtherUser,\r\n    search,\r\n    history,\r\n  ]);\r\n\r\n  let pageTitle = 'User info is loading... - E-Shopping';\r\n  let content = <Loader align=\"center\" />;\r\n  if (otherUser === null) {\r\n    pageTitle = 'User not found - E-Shopping';\r\n    content = (\r\n      <Heading variant=\"h4\" align=\"center\" lineHeight=\"4\" data-testid=\"OtherUser-error\">\r\n        Such user does not exist or problem during fetching occurred\r\n      </Heading>\r\n    );\r\n  } else if (otherUser) {\r\n    const { username, email, phone } = otherUser;\r\n\r\n    pageTitle = `User \"${otherUserUsername}\" - E-Shopping`;\r\n\r\n    let contactData = (\r\n      <Heading variant=\"h4\" mgBottom=\"3\" data-testid=\"OtherUser-data-private\">\r\n        This user has his contact data set to private\r\n      </Heading>\r\n    );\r\n    if (email || phone) {\r\n      contactData = (\r\n        <FlexWrapper wrap=\"wrap\" mgBottom=\"3\" spacing=\"3\">\r\n          {email && (\r\n            <PlainText size=\"4\" data-testid=\"OtherUser-email-wrapper\">\r\n              <PlainText weight=\"700\">Email:&nbsp;</PlainText>\r\n              {email}\r\n            </PlainText>\r\n          )}\r\n          {phone && (\r\n            <PlainText size=\"4\" data-testid=\"OtherUser-phone-wrapper\">\r\n              <PlainText weight=\"700\">Phone number:&nbsp;</PlainText>\r\n              {phone}\r\n            </PlainText>\r\n          )}\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    content = (\r\n      <>\r\n        <Heading variant=\"h3\">{username}</Heading>\r\n        {contactData}\r\n        <ProductsAndFilters page={productPages.USER_PRODUCTS} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor\r\n        title={pageTitle}\r\n        description=\"Check out informations about this user and his products\"\r\n      />\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n"],"names":["OtherUser","_ref","match","location","history","params","username","otherUserUsername","search","userProfile","useSelector","state","auth","profile","currentUserUsername","otherUser","productsPerPage","ui","dispatch","useDispatch","onFetchOtherUser","useCallback","actions","onSetOtherUser","user","onFetchProducts","queryParams","pageType","useEffect","replace","productPages","USER_PRODUCTS","scrollToTop","undefined","pageTitle","content","_jsx","Loader","align","Heading","variant","lineHeight","children","email","phone","concat","contactData","mgBottom","_jsxs","FlexWrapper","wrap","spacing","PlainText","size","weight","_Fragment","ProductsAndFilters","page","MetaDescriptor","title","description"],"sourceRoot":""}