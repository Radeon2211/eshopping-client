{"version":3,"file":"static/js/540.10b352ed.chunk.js","mappings":"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","sources":["components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.sc.js","components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.js","containers/MyAccount/MyAccount.sc.js","containers/MyAccount/MyData/MyData.sc.js","containers/MyAccount/MyData/SingleInfo/SingleInfo.js","containers/MyAccount/MyData/MyData.js","containers/MyAccount/MyProducts/MyProducts.js","components/Orders/OrderList/OrderList.sc.js","components/Orders/OrderList/OrderList.js","components/Orders/SortOrders/SortOrders.js","components/Orders/Orders.js","containers/MyAccount/MySellHistory/MySellHistory.js","containers/MyAccount/MyPlacedOrders/MyPlacedOrders.js","containers/MyAccount/MyAccount.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: ${({ theme }) => theme.spacings.level3};\r\n`;\r\n\r\nexport const NameAndPrice = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-right: ${({ theme }) => theme.spacings.level1};\r\n  }\r\n\r\n  & .name {\r\n    flex: 2;\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n\r\n    & > a {\r\n      transition: color ${({ theme }) => theme.durations.level1}s;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.green};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    align-items: start;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-right: 0;\r\n      margin-bottom: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n\r\n    & .name {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './TransactionAndOrderProdItem.sc';\r\nimport theme from '../../styled/theme';\r\nimport ProductThumbnail from '../UI/ProductThumbnail/ProductThumbnail';\r\nimport PlainText from '../UI/PlainText';\r\nimport { formatPrice, roundOverallPrice } from '../../shared/utility/utility';\r\nimport FlexWrapper from '../UI/FlexWrapper';\r\n\r\nconst TransactionAndOrderProdItem = React.memo(({ data, orderId }) => {\r\n  const { _id: productId, name, price, quantity, photo } = data;\r\n\r\n  const roundedOverallPrice = roundOverallPrice(price * quantity);\r\n\r\n  return (\r\n    <SC.Wrapper data-testid=\"TransactionAndOrderProdItem\">\r\n      <FlexWrapper $spacing=\"2\">\r\n        <Link\r\n          to={`/product/${productId}`}\r\n          data-testid=\"TransactionAndOrderProdItem-product-link-photo\"\r\n        >\r\n          <ProductThumbnail\r\n            photo={photo}\r\n            alt={name}\r\n            productId={productId}\r\n            width=\"5\"\r\n            height=\"5\"\r\n            orderId={orderId}\r\n          />\r\n        </Link>\r\n        <SC.NameAndPrice>\r\n          <span className=\"name\">\r\n            <Link\r\n              to={`/product/${productId}`}\r\n              data-testid=\"TransactionAndOrderProdItem-product-link-name\"\r\n            >\r\n              {name}\r\n            </Link>\r\n          </span>\r\n          <FlexWrapper $justify=\"space-between\" $align=\"center\" $flex=\"1\">\r\n            <PlainText\r\n              $size=\"2\"\r\n              $color={theme.colors.light4}\r\n              data-testid=\"TransactionAndOrderProdItem-product-price-per-piece\"\r\n            >\r\n              {`${quantity} x ${formatPrice(price)}`}\r\n            </PlainText>\r\n            <PlainText $size=\"4\" data-testid=\"TransactionAndOrderProdItem-product-overall-price\">\r\n              {formatPrice(roundedOverallPrice)}\r\n            </PlainText>\r\n          </FlexWrapper>\r\n        </SC.NameAndPrice>\r\n      </FlexWrapper>\r\n    </SC.Wrapper>\r\n  );\r\n});\r\n\r\nTransactionAndOrderProdItem.defaultProps = {\r\n  orderId: '',\r\n};\r\n\r\nTransactionAndOrderProdItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    photo: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  orderId: PropTypes.string,\r\n};\r\n\r\nexport default TransactionAndOrderProdItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  & .nav {\r\n    background-color: ${({ theme }) => theme.colors.light1};\r\n    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\r\n    left: 0;\r\n    padding-bottom: ${({ theme }) => theme.spacings.level1};\r\n    position: fixed;\r\n    top: 6.2rem;\r\n    width: 100%;\r\n    z-index: ${({ theme }) => theme.zIndexes.level3};\r\n  }\r\n\r\n  & .nav-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style: none;\r\n  }\r\n\r\n  & .nav-link {\r\n    border-bottom: 2px solid transparent;\r\n    display: block;\r\n    font-size: ${({ theme }) => theme.fontSizes.level2};\r\n    letter-spacing: 1px;\r\n    padding: ${({ theme }) => theme.spacings.level2};\r\n    text-transform: uppercase;\r\n    transition: all ${({ theme }) => theme.durations.level1}s;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.green};\r\n    }\r\n  }\r\n\r\n  & .nav-link-active {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n    color: ${({ theme }) => theme.colors.blue};\r\n    cursor: default;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.blue};\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    & .nav {\r\n      top: 10.8rem;\r\n    }\r\n\r\n    & .nav-list {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 24.5em) {\r\n    & .nav-link {\r\n      letter-spacing: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 22.5em) {\r\n    & .nav-link {\r\n      font-size: ${({ theme }) => theme.fontSizes.level1};\r\n      padding: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Routes = styled.div`\r\n  ${({ $extraMargin, theme }) => {\r\n    if ($extraMargin) {\r\n      return `\r\n        margin-top: ${theme.spacings.level5};\r\n      `;\r\n    }\r\n    return ``;\r\n  }}\r\n`;\r\n\r\nexport const OrdersWrapper = styled.div`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  width: 80rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: ${({ theme }) => theme.spacings.level3};\r\n  grid-template-columns: repeat(3, 1fr);\r\n\r\n  & .change-passwd-btn {\r\n    grid-area: 3 / 2 / 3 / 3;\r\n  }\r\n\r\n  & .actions {\r\n    grid-column: 1 / -1;\r\n  }\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    & .change-passwd-btn {\r\n      grid-area: 4 / 1 / 4 / 3;\r\n    }\r\n\r\n    & .actions > * {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PendingUserLogoutBtn = styled(Link)`\r\n  @media only screen and (max-width: 37.5em) {\r\n    & > * {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../../../components/UI/Button/Button';\r\nimport Heading from '../../../../components/UI/Heading/Heading';\r\nimport { singleInfoNames } from '../../../../shared/constants';\r\nimport FlexWrapper from '../../../../components/UI/FlexWrapper';\r\nimport PlainText from '../../../../components/UI/PlainText';\r\n\r\nexport default function SingleInfo({ name, content, clickHandler }) {\r\n  let contentNode = '';\r\n  if (name === singleInfoNames.ADDRESS) {\r\n    contentNode = (\r\n      <FlexWrapper $direction=\"column\" $spacing=\"1\">\r\n        {content.map((value, idx) => (\r\n          <PlainText key={idx} $size=\"3\" $wordBreak=\"break-all\">\r\n            {value}\r\n          </PlainText>\r\n        ))}\r\n      </FlexWrapper>\r\n    );\r\n  } else if (name === singleInfoNames.CONTACTS) {\r\n    contentNode = (\r\n      <FlexWrapper $direction=\"column\" $spacing=\"1\">\r\n        <PlainText $size=\"3\" $wordBreak=\"break-all\">\r\n          Email:&nbsp;\r\n          {content.email ? 'visible' : 'hidden'}\r\n        </PlainText>\r\n        <PlainText $size=\"3\" $wordBreak=\"break-all\">\r\n          Phone number:&nbsp;\r\n          {content.phone ? 'visible' : 'hidden'}\r\n        </PlainText>\r\n      </FlexWrapper>\r\n    );\r\n  } else {\r\n    contentNode = (\r\n      <PlainText $size=\"3\" $wordBreak=\"break-all\">\r\n        {content}\r\n      </PlainText>\r\n    );\r\n  }\r\n\r\n  let button = null;\r\n  if (clickHandler) {\r\n    button = (\r\n      <Button clicked={clickHandler} data-testid={`SingleInfo-${name}-btn`}>\r\n        Change\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FlexWrapper $direction=\"column\" $spacing=\"2\" $align=\"start\" data-testid={`SingleInfo-${name}`}>\r\n      <Heading $variant=\"h4\">{name}</Heading>\r\n      {contentNode}\r\n      {button}\r\n    </FlexWrapper>\r\n  );\r\n}\r\n\r\nSingleInfo.defaultProps = {\r\n  clickHandler: undefined,\r\n};\r\n\r\nSingleInfo.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.shape({\r\n      email: PropTypes.bool.isRequired,\r\n      phone: PropTypes.bool.isRequired,\r\n    }),\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]).isRequired,\r\n  clickHandler: PropTypes.func,\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as SC from './MyData.sc';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { modalTypes, singleInfoNames, userStatuses } from '../../../shared/constants';\r\nimport PlainPanel from '../../../components/UI/Panels/PlainPanel';\r\nimport FlexWrapper from '../../../components/UI/FlexWrapper';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport SingleInfo from './SingleInfo/SingleInfo';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport PlainText from '../../../components/UI/PlainText';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function MyData({ history }) {\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n\r\n  const dispatch = useDispatch();\r\n  const onSetModal = useCallback(\r\n    (modalContent) => dispatch(actions.setModal(modalContent)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  let dataAndActions = null;\r\n  let pendingUserContent = null;\r\n  if (userProfile) {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n      street,\r\n      zipCode,\r\n      city,\r\n      country,\r\n      phone,\r\n      contacts,\r\n      status,\r\n      isAdmin,\r\n    } = userProfile;\r\n\r\n    const isAccountActive = status === userStatuses.ACTIVE;\r\n\r\n    let adminContent = null;\r\n    if (isAdmin) {\r\n      adminContent = (\r\n        <FlexWrapper\r\n          $spacing=\"3\"\r\n          className=\"actions\"\r\n          $justify=\"center\"\r\n          data-testid=\"MyData-admin-content\"\r\n        >\r\n          <Button clicked={() => onSetModal(modalTypes.ADD_ADMIN)}>Add admin</Button>\r\n          <Button $color=\"red\" clicked={() => onSetModal(modalTypes.REMOVE_ADMIN)}>\r\n            Remove admin\r\n          </Button>\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    let pendingUserActions = null;\r\n    if (!isAccountActive) {\r\n      pendingUserActions = (\r\n        <FlexWrapper\r\n          $spacing=\"3\"\r\n          $justify=\"center\"\r\n          className=\"actions\"\r\n          data-testid=\"MyData-pending-user-actions\"\r\n        >\r\n          <Button clicked={() => onSetModal(modalTypes.SEND_VERIFICATION_LINK)}>\r\n            Send verification link\r\n          </Button>\r\n          <Button clicked={() => history.push('/logout')}>Logout</Button>\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    dataAndActions = (\r\n      <>\r\n        <SingleInfo name={singleInfoNames.USERNAME} content={username} />\r\n        <SingleInfo\r\n          name={singleInfoNames.NAME}\r\n          content={`${firstName} ${lastName}`}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_NAME) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.EMAIL}\r\n          content={email}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_EMAIL) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.ADDRESS}\r\n          content={[street, `${zipCode} ${city}`, country]}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_ADDRESS) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.CONTACTS}\r\n          content={contacts}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_CONTACTS) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.PHONE_NUMBER}\r\n          content={phone}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_PHONE_NUMBER) : null}\r\n        />\r\n        {pendingUserActions}\r\n        <FlexWrapper $spacing=\"3\" className=\"actions\" $justify=\"center\">\r\n          {isAccountActive && (\r\n            <Button clicked={() => onSetModal(modalTypes.CHANGE_PASSWORD)}>Change password</Button>\r\n          )}\r\n          <Button $color=\"red\" clicked={() => onSetModal(modalTypes.DELETE_ACCOUNT)}>\r\n            Delete account\r\n          </Button>\r\n        </FlexWrapper>\r\n        {adminContent}\r\n      </>\r\n    );\r\n\r\n    if (!isAccountActive) {\r\n      pendingUserContent = (\r\n        <PlainPanel data-testid=\"MyData-pending-user-content\">\r\n          <PlainText $size=\"3\" $lineHeight=\"5\">\r\n            You need to activate your account to unlock all app functionalities. Verification link\r\n            is active for 10 minutes. You can resend it below. If you do not activate your account\r\n            within 1 hour, account will be deleted permanently.\r\n          </PlainText>\r\n        </PlainPanel>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor\r\n        title=\"Your account data - E-Shopping\"\r\n        description=\"Check out your account informations\"\r\n      />\r\n      <Heading $variant=\"h3\">My data</Heading>\r\n      <FlexWrapper $direction=\"column\" $spacing=\"3\">\r\n        {pendingUserContent}\r\n        <PlainPanel>\r\n          <SC.Wrapper>{dataAndActions}</SC.Wrapper>\r\n        </PlainPanel>\r\n      </FlexWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { productPages } from '../../../shared/constants';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport ProductsAndFilters from '../../../components/ProductsAndFilters/ProductsAndFilters';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\nimport useLastLocation from '../../../shared/useLastLocation';\r\n\r\nexport default function MyProducts({ userProfile, location }) {\r\n  const { search } = location;\r\n\r\n  const lastLocation = useLastLocation();\r\n\r\n  const productsPerPage = useSelector((state) => state.ui.productsPerPage);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchProducts = useCallback(\r\n    (queryParams, pageType) => dispatch(actions.fetchProducts(queryParams, pageType)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    onFetchProducts(search, productPages.MY_PRODUCTS);\r\n    if (!lastLocation?.pathname.startsWith('/product/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [search, onFetchProducts, productsPerPage, userProfile, lastLocation]);\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor title=\"Your offers - E-Shopping\" description=\"Check out your offers\" />\r\n      <Heading $variant=\"h3\">My products</Heading>\r\n      <ProductsAndFilters page={productPages.MY_PRODUCTS} />\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SingleOrder = styled.div`\r\n  padding: ${({ theme }) => theme.spacings.level3} 0;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.light3};\r\n\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './OrderList.sc';\r\nimport theme from '../../../styled/theme';\r\nimport { GreenText } from '../../../styled/components';\r\nimport TransactionAndOrderProdItem from '../../TransactionAndOrderProdItem/TransactionAndOrderProdItem';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport PlainText from '../../UI/PlainText';\r\nimport FlexWrapper from '../../UI/FlexWrapper';\r\nimport Button from '../../UI/Button/Button';\r\nimport LoadingOverlay from '../../UI/LoadingOverlay/LoadingOverlay';\r\nimport { formatPrice, formatOrderDate } from '../../../shared/utility/utility';\r\nimport * as propTypes from '../../../shared/propTypes';\r\n\r\nexport default function OrderList({ orders, orderType }) {\r\n  const isDataLoading = useSelector((state) => state.ui.isDataLoading);\r\n\r\n  const orderList = orders.map((order) => {\r\n    const username =\r\n      orderType === orderTypes.PLACED_ORDERS ? order.seller?.username : order.buyer?.username;\r\n    const userType = orderType === orderTypes.PLACED_ORDERS ? 'seller ' : 'buyer ';\r\n\r\n    return (\r\n      <SC.SingleOrder key={order._id} data-testid=\"OrderList-single-order\">\r\n        <FlexWrapper $justify=\"space-between\" $align=\"flex-end\" $spacing=\"3\">\r\n          <PlainText $size=\"3\">\r\n            <span data-testid=\"OrderList-user-type\">{userType}</span>\r\n            {username ? (\r\n              <Link to={`/user/${username}?p=1`} data-testid=\"OrderList-user-link\">\r\n                <GreenText>{username}</GreenText>\r\n              </Link>\r\n            ) : (\r\n              <PlainText $fStyle=\"italic\" data-testid=\"OrderList-account-deleted\">\r\n                (account has been deleted)\r\n              </PlainText>\r\n            )}\r\n          </PlainText>\r\n          <PlainText $size=\"2\" data-testid=\"OrderList-created-at-date\">\r\n            {formatOrderDate(order.createdAt)}\r\n          </PlainText>\r\n        </FlexWrapper>\r\n        {order.products.map((product) => (\r\n          <TransactionAndOrderProdItem key={product._id} data={product} orderId={order._id} />\r\n        ))}\r\n        <FlexWrapper $mgTop=\"3\" $justify=\"space-between\" $align=\"center\" $spacing=\"3\">\r\n          <Link to={`/order/${order._id}`} data-testid=\"OrderList-order-details-link\">\r\n            <Button>details</Button>\r\n          </Link>\r\n          <div>\r\n            <PlainText $size=\"3\" $mgRight=\"1\" $spacing=\"1px\" $color={theme.colors.light4}>\r\n              TOTAL\r\n            </PlainText>\r\n            <PlainText $size=\"5\" data-testid=\"OrderList-overall-price\">\r\n              {formatPrice(order.overallPrice)}\r\n            </PlainText>\r\n          </div>\r\n        </FlexWrapper>\r\n      </SC.SingleOrder>\r\n    );\r\n  });\r\n\r\n  const loadingOverlay = isDataLoading ? <LoadingOverlay /> : null;\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      {orderList}\r\n      {loadingOverlay}\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n\r\nOrderList.propTypes = {\r\n  orders: PropTypes.arrayOf(PropTypes.shape(propTypes.orderItem)).isRequired,\r\n  orderType: PropTypes.oneOf(Object.values(orderTypes)).isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport queryString from 'query-string';\r\nimport { sortOrdersOptions } from '../../../shared/constants';\r\nimport { getParamsWithoutPollution } from '../../../shared/utility/utility';\r\n\r\nexport const SC = {};\r\nSC.Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  margin-right: ${({ theme }) => theme.spacings.level2};\r\n\r\n  & .label {\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n    margin-right: ${({ theme }) => theme.spacings.level2};\r\n  }\r\n\r\n  & .select {\r\n    font-size: ${({ theme }) => theme.fontSizes.level2};\r\n    flex: 1;\r\n    max-width: 22rem;\r\n    z-index: ${({ theme }) => theme.zIndexes.level2};\r\n  }\r\n`;\r\n\r\nconst customStyles = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    minHeight: '25px',\r\n  }),\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    padding: '0.6rem',\r\n  }),\r\n};\r\n\r\nexport default function SortOrders() {\r\n  const [option, setOption] = useState(sortOrdersOptions[0]);\r\n\r\n  const history = useHistory();\r\n  const { search, pathname } = history.location;\r\n\r\n  const optionChangeHandle = (change) => {\r\n    if (change.value === option.value) return;\r\n    setOption(change);\r\n    const parsedQueryParams = getParamsWithoutPollution(search);\r\n    parsedQueryParams.sortBy = change.value;\r\n    const updatedQueryParams = queryString.stringify(parsedQueryParams);\r\n    history.replace(`${pathname}?${updatedQueryParams}`);\r\n  };\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      <label htmlFor=\"sortOption\" className=\"label\">\r\n        Sort\r\n      </label>\r\n      <Select\r\n        options={sortOrdersOptions}\r\n        value={option}\r\n        onChange={optionChangeHandle}\r\n        isSearchable={false}\r\n        styles={customStyles}\r\n        id=\"sortOption\"\r\n        className=\"select\"\r\n      />\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport PlainPanel from '../UI/Panels/PlainPanel';\r\nimport InputPagination from '../Pagination/InputPagination/InputPagination';\r\nimport BottomPagination from '../Pagination/BottomPagination/BottomPagination';\r\nimport OrderList from './OrderList/OrderList';\r\nimport SortOrders from './SortOrders/SortOrders';\r\nimport Heading from '../UI/Heading/Heading';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport { listItemTypes, orderTypes, defaultOrdersPerPage } from '../../shared/constants';\r\nimport * as propTypes from '../../shared/propTypes';\r\nimport { TopPagination } from '../../styled/components';\r\n\r\nexport default function Orders({ orders, type }) {\r\n  const { search } = useLocation();\r\n\r\n  const orderCount = useSelector((state) => state.auth.orderCount);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOrders = useCallback(\r\n    (queryParams, orderType) => dispatch(actions.fetchOrders(queryParams, orderType)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    onFetchOrders(search, type);\r\n  }, [onFetchOrders, type, search]);\r\n\r\n  let content = <Loader align=\"center\" />;\r\n  if (orders === null) {\r\n    content = (\r\n      <Heading $variant=\"h4\" $align=\"center\" data-testid=\"Orders-error\">\r\n        {type === orderTypes.PLACED_ORDERS\r\n          ? 'There is a problem to fetch your placed orders'\r\n          : 'There is a problem to fetch your sell history'}\r\n      </Heading>\r\n    );\r\n  } else if (orders) {\r\n    if (orders.length <= 0) {\r\n      content = (\r\n        <Heading $variant=\"h4\" $align=\"center\" data-testid=\"Orders-no-orders-info\">\r\n          {type === orderTypes.PLACED_ORDERS\r\n            ? `You don't have any placed orders yet`\r\n            : 'Your sell history is empty'}\r\n        </Heading>\r\n      );\r\n    } else if (orderCount > 0) {\r\n      content = (\r\n        <PlainPanel>\r\n          <TopPagination>\r\n            <SortOrders />\r\n            <InputPagination itemQuantity={orderCount} quantityPerPage={defaultOrdersPerPage} />\r\n          </TopPagination>\r\n          <OrderList orders={orders} orderType={type} />\r\n          <BottomPagination\r\n            itemQuantity={orderCount}\r\n            itemsType={listItemTypes.ORDER}\r\n            quantityPerPage={defaultOrdersPerPage}\r\n          />\r\n        </PlainPanel>\r\n      );\r\n    }\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nOrders.defaultProps = {\r\n  orders: undefined,\r\n};\r\n\r\nOrders.propTypes = {\r\n  orders: PropTypes.arrayOf(PropTypes.shape(propTypes.orderItem)),\r\n  type: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as SC from '../MyAccount.sc';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport Orders from '../../../components/Orders/Orders';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\nimport useLastLocation from '../../../shared/useLastLocation';\r\n\r\nexport default function MySellHistory() {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const sellHistory = useSelector((state) => state.auth.sellHistory);\r\n\r\n  useEffect(() => {\r\n    if (!lastLocation?.pathname.startsWith('/order/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [lastLocation]);\r\n\r\n  return (\r\n    <SC.OrdersWrapper>\r\n      <MetaDescriptor\r\n        title=\"Your sell history - E-Shopping\"\r\n        description=\"Check out your sell history\"\r\n      />\r\n      <Heading $variant=\"h3\">My sell history</Heading>\r\n      <Orders orders={sellHistory} type={orderTypes.SELL_HISTORY} />\r\n    </SC.OrdersWrapper>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as SC from '../MyAccount.sc';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport Orders from '../../../components/Orders/Orders';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\nimport useLastLocation from '../../../shared/useLastLocation';\r\n\r\nexport default function MyPlacedOrders() {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const placedOrders = useSelector((state) => state.auth.placedOrders);\r\n\r\n  useEffect(() => {\r\n    if (!lastLocation?.pathname.startsWith('/order/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [lastLocation]);\r\n\r\n  return (\r\n    <SC.OrdersWrapper>\r\n      <MetaDescriptor\r\n        title=\"Your placed orders - E-Shopping\"\r\n        description=\"Check out orders that you placed\"\r\n      />\r\n      <Heading $variant=\"h3\">My placed orders</Heading>\r\n      <Orders orders={placedOrders} type={orderTypes.PLACED_ORDERS} />\r\n    </SC.OrdersWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink, Switch, Route, Redirect } from 'react-router-dom';\r\nimport * as SC from './MyAccount.sc';\r\nimport MyData from './MyData/MyData';\r\nimport MyProducts from './MyProducts/MyProducts';\r\nimport MySellHistory from './MySellHistory/MySellHistory';\r\nimport MyPlacedOrders from './MyPlacedOrders/MyPlacedOrders';\r\nimport { defaultAppPath, userStatuses } from '../../shared/constants';\r\n\r\nexport default function MyAccount() {\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n\r\n  let navigation = null;\r\n  if (userProfile.status === userStatuses.ACTIVE) {\r\n    navigation = (\r\n      <nav className=\"nav\" data-testid=\"MyAccount-navigation\">\r\n        <ul className=\"nav-list\">\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/data\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-data-link\"\r\n            >\r\n              Data\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/my-account${defaultAppPath}`}\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-products-link\"\r\n            >\r\n              Products\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/sell-history?p=1\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-sell-history-link\"\r\n            >\r\n              Sell history\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/placed-orders?p=1\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-placed-orders-link\"\r\n            >\r\n              Placed orders\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  let routes = (\r\n    <SC.Routes $extraMargin={false} data-testid=\"MyAccount-pending-user-routes\">\r\n      <Switch>\r\n        <Route path=\"/my-account/data\" exact component={MyData} />\r\n        <Redirect to=\"/my-account/data\" />\r\n      </Switch>\r\n    </SC.Routes>\r\n  );\r\n  if (userProfile.status === userStatuses.ACTIVE) {\r\n    routes = (\r\n      <SC.Routes $extraMargin data-testid=\"MyAccount-active-user-routes\">\r\n        <Switch>\r\n          <Route path=\"/my-account/data\" exact component={MyData} />\r\n          <Route\r\n            path=\"/my-account/products\"\r\n            exact\r\n            render={(props) => <MyProducts userProfile={userProfile} {...props} />}\r\n          />\r\n          <Route path=\"/my-account/sell-history\" exact component={MySellHistory} />\r\n          <Route path=\"/my-account/placed-orders\" exact component={MyPlacedOrders} />\r\n          <Redirect to=\"/my-account/data\" />\r\n        </Switch>\r\n      </SC.Routes>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      {navigation}\r\n      {routes}\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","spacings","level3","NameAndPrice","_templateObject2","_ref2","level1","_ref3","fontSizes","_ref4","durations","_ref5","colors","green","_ref6","TransactionAndOrderProdItem","React","data","orderId","_id","productId","name","price","quantity","photo","roundedOverallPrice","roundOverallPrice","_jsx","SC","children","_jsxs","FlexWrapper","$spacing","Link","to","concat","ProductThumbnail","alt","width","height","className","$justify","$align","$flex","PlainText","$size","$color","light4","formatPrice","defaultProps","light1","zIndexes","level2","_ref7","_ref8","blue","_ref9","_ref10","_ref11","_ref12","Routes","_ref13","$extraMargin","level5","OrdersWrapper","_templateObject3","SingleInfo","content","clickHandler","contentNode","singleInfoNames","ADDRESS","$direction","map","value","idx","$wordBreak","CONTACTS","email","phone","button","Button","clicked","Heading","$variant","undefined","MyData","history","userProfile","useSelector","state","auth","profile","dispatch","useDispatch","onSetModal","useCallback","modalContent","actions","useEffect","scrollToTop","dataAndActions","pendingUserContent","firstName","lastName","username","street","zipCode","city","country","contacts","status","isAdmin","isAccountActive","userStatuses","ACTIVE","adminContent","modalTypes","ADD_ADMIN","REMOVE_ADMIN","pendingUserActions","SEND_VERIFICATION_LINK","push","_Fragment","USERNAME","NAME","CHANGE_NAME","EMAIL","CHANGE_EMAIL","CHANGE_ADDRESS","CHANGE_CONTACTS","PHONE_NUMBER","CHANGE_PHONE_NUMBER","CHANGE_PASSWORD","DELETE_ACCOUNT","PlainPanel","$lineHeight","MetaDescriptor","title","description","MyProducts","location","search","lastLocation","useLastLocation","productsPerPage","ui","onFetchProducts","queryParams","pageType","productPages","MY_PRODUCTS","pathname","startsWith","ProductsAndFilters","page","SingleOrder","light3","OrderList","orders","orderType","isDataLoading","orderList","order","_order$seller","_order$buyer","orderTypes","PLACED_ORDERS","seller","buyer","userType","GreenText","$fStyle","formatOrderDate","createdAt","products","product","$mgTop","$mgRight","overallPrice","loadingOverlay","LoadingOverlay","customStyles","control","provided","minHeight","dropdownIndicator","padding","SortOrders","option","setOption","useState","sortOrdersOptions","useHistory","htmlFor","Select","options","onChange","change","parsedQueryParams","getParamsWithoutPollution","sortBy","updatedQueryParams","queryString","replace","isSearchable","styles","id","Orders","type","useLocation","orderCount","onFetchOrders","Loader","align","length","TopPagination","InputPagination","itemQuantity","quantityPerPage","defaultOrdersPerPage","BottomPagination","itemsType","listItemTypes","ORDER","MySellHistory","sellHistory","SELL_HISTORY","MyPlacedOrders","placedOrders","MyAccount","navigation","NavLink","activeClassName","defaultAppPath","routes","Switch","Route","path","exact","component","Redirect","render","props","propTypes","PropTypes","isRequired"],"sourceRoot":""}