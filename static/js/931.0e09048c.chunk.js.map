{"version":3,"file":"static/js/931.0e09048c.chunk.js","mappings":"4RAae,SAASA,IACtB,MAAQC,SAAUC,IAAsBC,EAAAA,EAAAA,OAClC,OAAEC,IAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,UAChDC,EAAiC,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaP,SACnCa,GAAYL,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKG,YAC9CC,GAAkBN,EAAAA,EAAAA,KAAaC,GAAUA,EAAMM,GAAGD,kBAElDE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,cACtBnB,GAAagB,EAASI,EAAAA,GAAuBpB,KAC9C,CAACgB,IAEGK,GAAiBF,EAAAA,EAAAA,cAAaG,GAASN,EAASI,EAAAA,GAAqBE,KAAQ,CAACN,IAC9EO,GAAkBJ,EAAAA,EAAAA,cACtB,CAACK,EAAaC,EAAUzB,IACtBgB,EAASI,EAAAA,GAAsBI,EAAaC,EAAUzB,KACxD,CAACgB,KAGHU,EAAAA,EAAAA,YAAU,KACJzB,IAAsBW,EACxBP,EAAS,mBAAoB,CAAEsB,SAAS,KAExCT,EAAiBjB,GACjBsB,EAAgBpB,EAAQyB,EAAAA,GAAaC,cAAe5B,IACpD6B,EAAAA,EAAAA,OAEK,IAAMT,OAAeU,KAC3B,CACD9B,EACAW,EACAM,EACAK,EACAT,EACAO,EACAlB,IAGF,IAAI6B,EAAY,uCACZC,GAAUC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,WAC5B,GAAkB,OAAdvB,EACFmB,EAAY,8BACZC,GACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,SAAS,KAAKC,OAAO,SAASC,YAAY,IAAI,cAAY,kBAAiBC,SAAC,sEAIlF,GAAI5B,EAAW,CACpB,MAAM,SAAEb,EAAQ,MAAE0C,EAAK,MAAEC,GAAU9B,EAEnCmB,EAAS,SAAAY,OAAY3C,EAAiB,kBAEtC,IAAI4C,GACFX,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,SAAS,KAAKQ,UAAU,IAAI,cAAY,yBAAwBL,SAAC,mDAIxEC,GAASC,KACXE,GACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,MAAM,OAAOH,UAAU,IAAII,SAAS,IAAGT,SAAA,CACjDC,IACCK,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,MAAM,IAAI,cAAY,0BAAyBX,SAAA,EACxDP,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACE,QAAQ,MAAKZ,SAAC,eACxBC,KAGJC,IACCI,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,MAAM,IAAI,cAAY,0BAAyBX,SAAA,EACxDP,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACE,QAAQ,MAAKZ,SAAC,sBACxBE,SAOXV,GACEc,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAb,SAAA,EACEP,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,SAAS,KAAIG,SAAEzC,IACvB6C,GACDX,EAAAA,EAAAA,KAACqB,EAAAA,EAAkB,CAACC,KAAM5B,EAAAA,GAAaC,kBAG7C,CAEA,OACEkB,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAb,SAAA,EACEP,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,CACbC,MAAO1B,EACP2B,YAAY,4DAEb1B,IAGP,C","sources":["containers/OtherUser/OtherUser.js"],"sourcesContent":["import { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Heading from '../../components/UI/Heading/Heading';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport PlainText from '../../components/UI/PlainText';\r\nimport ProductsAndFilters from '../../components/ProductsAndFilters/ProductsAndFilters';\r\nimport { productPages } from '../../shared/constants';\r\nimport FlexWrapper from '../../components/UI/FlexWrapper';\r\nimport { scrollToTop } from '../../shared/utility/utility';\r\nimport MetaDescriptor from '../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function OtherUser() {\r\n  const { username: otherUserUsername } = useParams();\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n  const currentUserUsername = userProfile?.username;\r\n  const otherUser = useSelector((state) => state.auth.otherUser);\r\n  const productsPerPage = useSelector((state) => state.ui.productsPerPage);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOtherUser = useCallback(\r\n    (username) => dispatch(actions.fetchOtherUser(username)),\r\n    [dispatch],\r\n  );\r\n  const onSetOtherUser = useCallback((user) => dispatch(actions.setOtherUser(user)), [dispatch]);\r\n  const onFetchProducts = useCallback(\r\n    (queryParams, pageType, username) =>\r\n      dispatch(actions.fetchProducts(queryParams, pageType, username)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (otherUserUsername === currentUserUsername) {\r\n      navigate('/my-account/data', { replace: true });\r\n    } else {\r\n      onFetchOtherUser(otherUserUsername);\r\n      onFetchProducts(search, productPages.USER_PRODUCTS, otherUserUsername);\r\n      scrollToTop();\r\n    }\r\n    return () => onSetOtherUser(undefined);\r\n  }, [\r\n    otherUserUsername,\r\n    currentUserUsername,\r\n    onFetchOtherUser,\r\n    onFetchProducts,\r\n    productsPerPage,\r\n    onSetOtherUser,\r\n    search,\r\n  ]);\r\n\r\n  let pageTitle = 'User info is loading... - E-Shopping';\r\n  let content = <Loader align=\"center\" />;\r\n  if (otherUser === null) {\r\n    pageTitle = 'User not found - E-Shopping';\r\n    content = (\r\n      <Heading $variant=\"h4\" $align=\"center\" $lineHeight=\"4\" data-testid=\"OtherUser-error\">\r\n        Such user does not exist or problem during fetching occurred\r\n      </Heading>\r\n    );\r\n  } else if (otherUser) {\r\n    const { username, email, phone } = otherUser;\r\n\r\n    pageTitle = `User \"${otherUserUsername}\" - E-Shopping`;\r\n\r\n    let contactData = (\r\n      <Heading $variant=\"h4\" $mgBottom=\"3\" data-testid=\"OtherUser-data-private\">\r\n        This user has his contact data set to private\r\n      </Heading>\r\n    );\r\n    if (email || phone) {\r\n      contactData = (\r\n        <FlexWrapper $wrap=\"wrap\" $mgBottom=\"3\" $spacing=\"3\">\r\n          {email && (\r\n            <PlainText $size=\"4\" data-testid=\"OtherUser-email-wrapper\">\r\n              <PlainText $weight=\"700\">Email:&nbsp;</PlainText>\r\n              {email}\r\n            </PlainText>\r\n          )}\r\n          {phone && (\r\n            <PlainText $size=\"4\" data-testid=\"OtherUser-phone-wrapper\">\r\n              <PlainText $weight=\"700\">Phone number:&nbsp;</PlainText>\r\n              {phone}\r\n            </PlainText>\r\n          )}\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    content = (\r\n      <>\r\n        <Heading $variant=\"h3\">{username}</Heading>\r\n        {contactData}\r\n        <ProductsAndFilters page={productPages.USER_PRODUCTS} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor\r\n        title={pageTitle}\r\n        description=\"Check out informations about this user and his products\"\r\n      />\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n"],"names":["OtherUser","username","otherUserUsername","useParams","search","useLocation","navigate","useNavigate","userProfile","useSelector","state","auth","profile","currentUserUsername","otherUser","productsPerPage","ui","dispatch","useDispatch","onFetchOtherUser","useCallback","actions","onSetOtherUser","user","onFetchProducts","queryParams","pageType","useEffect","replace","productPages","USER_PRODUCTS","scrollToTop","undefined","pageTitle","content","_jsx","Loader","align","Heading","$variant","$align","$lineHeight","children","email","phone","concat","contactData","$mgBottom","_jsxs","FlexWrapper","$wrap","$spacing","PlainText","$size","$weight","_Fragment","ProductsAndFilters","page","MetaDescriptor","title","description"],"sourceRoot":""}