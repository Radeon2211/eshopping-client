{"version":3,"sources":["components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.sc.js","components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.js","components/UI/DeliveryAddress/DeliveryAddress.js","containers/OrderDetails/OrderDetails.sc.js","containers/OrderDetails/OrderDetails.js"],"names":["Wrapper","styled","FlexWrapper","theme","spacings","level3","NameAndPrice","div","level1","fontSizes","durations","colors","green","Price","TransactionAndOrderProdItem","React","memo","data","orderId","productId","_id","name","price","quantity","photo","roundedOverallPrice","roundOverallPrice","spacing","data-testid","to","ProductThumbnail","alt","width","height","className","justify","align","flex","PlainText","size","color","light4","formatPrice","defaultProps","DeliveryAddress","firstName","lastName","street","zipCode","city","country","phone","rowValues","direction","map","value","idx","wordBreak","OrderDetails","useParams","id","orderDetails","useSelector","state","auth","dispatch","useDispatch","onFetchOrderDetails","useCallback","actions","onSetOrderDetails","useEffect","scrollToTop","content","Loader","Heading","variant","lineHeight","seller","buyer","deliveryAddress","products","overallPrice","createdAt","generalInfoSection","mgBottom","weight","formatOrderDate","username","infoAboutSellerSection","data-test","email","deliveryAddressSection","productsSection","mgTop","product","display","textAlign","mgRight","PlainPanel","MetaDescriptor","title"],"mappings":"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","file":"static/js/5.e33b83ef.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport FlexWrapper from '../UI/FlexWrapper';\r\n\r\nexport const Wrapper = styled(FlexWrapper)`\r\n  padding-top: ${({ theme }) => theme.spacings.level3};\r\n\r\n  &:last-child {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const NameAndPrice = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-right: ${({ theme }) => theme.spacings.level1};\r\n  }\r\n\r\n  & .name {\r\n    flex: 2;\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n\r\n    & > a {\r\n      transition: color ${({ theme }) => theme.durations.level1}s;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.green};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    align-items: start;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-right: 0;\r\n      margin-bottom: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n\r\n    & .name {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Price = styled(FlexWrapper)`\r\n  @media only screen and (max-width: 56.25em) {\r\n    flex: initial;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './TransactionAndOrderProdItem.sc';\r\nimport theme from '../../styled/theme';\r\nimport ProductThumbnail from '../UI/ProductThumbnail/ProductThumbnail';\r\nimport PlainText from '../UI/PlainText';\r\nimport { formatPrice, roundOverallPrice } from '../../shared/utility/utility';\r\n\r\nconst TransactionAndOrderProdItem = React.memo(({ data, orderId }) => {\r\n  const { _id: productId, name, price, quantity, photo } = data;\r\n\r\n  const roundedOverallPrice = roundOverallPrice(price * quantity);\r\n\r\n  return (\r\n    <SC.Wrapper spacing=\"2\" data-testid=\"TransactionAndOrderProdItem\">\r\n      <Link\r\n        to={`/product/${productId}`}\r\n        data-testid=\"TransactionAndOrderProdItem-product-link-photo\"\r\n      >\r\n        <ProductThumbnail\r\n          photo={photo}\r\n          alt={name}\r\n          productId={productId}\r\n          width=\"5\"\r\n          height=\"5\"\r\n          orderId={orderId}\r\n        />\r\n      </Link>\r\n      <SC.NameAndPrice>\r\n        <span className=\"name\">\r\n          <Link\r\n            to={`/product/${productId}`}\r\n            data-testid=\"TransactionAndOrderProdItem-product-link-name\"\r\n          >\r\n            {name}\r\n          </Link>\r\n        </span>\r\n        <SC.Price justify=\"space-between\" align=\"center\" flex=\"1\">\r\n          <PlainText\r\n            size=\"2\"\r\n            color={theme.colors.light4}\r\n            data-testid=\"TransactionAndOrderProdItem-product-price-per-piece\"\r\n          >\r\n            {`${quantity} x ${formatPrice(price)}`}\r\n          </PlainText>\r\n          <PlainText size=\"4\" data-testid=\"TransactionAndOrderProdItem-product-overall-price\">\r\n            {formatPrice(roundedOverallPrice)}\r\n          </PlainText>\r\n        </SC.Price>\r\n      </SC.NameAndPrice>\r\n    </SC.Wrapper>\r\n  );\r\n});\r\n\r\nTransactionAndOrderProdItem.defaultProps = {\r\n  orderId: '',\r\n};\r\n\r\nTransactionAndOrderProdItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    photo: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  orderId: PropTypes.string,\r\n};\r\n\r\nexport default TransactionAndOrderProdItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FlexWrapper from '../FlexWrapper';\r\nimport PlainText from '../PlainText';\r\nimport * as propTypes from '../../../shared/propTypes';\r\n\r\nexport default function DeliveryAddress({ data }) {\r\n  const { firstName, lastName, street, zipCode, city, country, phone } = data;\r\n\r\n  const rowValues = [`${firstName} ${lastName}`, street, `${zipCode} ${city}`, country, phone];\r\n\r\n  return (\r\n    <FlexWrapper direction=\"column\" spacing=\"1\">\r\n      {rowValues.map((value, idx) => (\r\n        <PlainText key={idx} size=\"3\" wordBreak=\"break-all\">\r\n          {value}\r\n        </PlainText>\r\n      ))}\r\n    </FlexWrapper>\r\n  );\r\n}\r\n\r\nDeliveryAddress.propTypes = {\r\n  data: PropTypes.shape(propTypes.deliveryAddressStrings).isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Wrapper = styled.div`\r\n  font-size: ${({ theme }) => theme.fontSizes.level3};\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  width: 80rem;\r\n`;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport * as SC from './OrderDetails.sc';\r\nimport PlainPanel from '../../components/UI/Panels/PlainPanel';\r\nimport Heading from '../../components/UI/Heading/Heading';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport PlainText from '../../components/UI/PlainText';\r\nimport FlexWrapper from '../../components/UI/FlexWrapper';\r\nimport TransactionAndOrderProdItem from '../../components/TransactionAndOrderProdItem/TransactionAndOrderProdItem';\r\nimport DeliveryAddress from '../../components/UI/DeliveryAddress/DeliveryAddress';\r\nimport { formatOrderDate, formatPrice, scrollToTop } from '../../shared/utility/utility';\r\nimport { GreenText } from '../../styled/components';\r\nimport theme from '../../styled/theme';\r\nimport MetaDescriptor from '../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function OrderDetails() {\r\n  const { id: orderId } = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.auth.orderDetails);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOrderDetails = useCallback(\r\n    (id) => dispatch(actions.fetchOrderDetails(id)),\r\n    [dispatch],\r\n  );\r\n  const onSetOrderDetails = useCallback(() => dispatch(actions.setOrderDetails()), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onFetchOrderDetails(orderId);\r\n    scrollToTop();\r\n    return () => onSetOrderDetails();\r\n  }, [orderId, onFetchOrderDetails, onSetOrderDetails]);\r\n\r\n  let content = <Loader align=\"center\" />;\r\n  if (orderDetails === null) {\r\n    content = (\r\n      <Heading variant=\"h4\" align=\"center\" lineHeight=\"4\" data-testid=\"OrderDetails-error\">\r\n        There is a problem to fetch order details or given order does not exist\r\n      </Heading>\r\n    );\r\n  } else if (orderDetails) {\r\n    const { _id, seller, buyer, deliveryAddress, products, overallPrice, createdAt } = orderDetails;\r\n\r\n    const generalInfoSection = (\r\n      <div data-testid=\"OrderDetails-general-info-section\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          General info\r\n        </Heading>\r\n        <FlexWrapper direction=\"column\" spacing=\"1\">\r\n          <div>\r\n            <PlainText weight=\"700\">Order number:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">{_id}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText weight=\"700\">Transaction date:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">{formatOrderDate(createdAt)}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText weight=\"700\">Buyer:&nbsp;</PlainText>\r\n            <PlainText size=\"3\">\r\n              {buyer ? (\r\n                <Link to={`/user/${buyer.username}?p=1`} data-testid=\"OrderDetails-buyer-link\">\r\n                  <GreenText>{buyer.username}</GreenText>\r\n                </Link>\r\n              ) : (\r\n                <i data-testid=\"OrderDetails-buyer-deleted\">(account has been deleted)</i>\r\n              )}\r\n            </PlainText>\r\n          </div>\r\n        </FlexWrapper>\r\n      </div>\r\n    );\r\n\r\n    const infoAboutSellerSection = (\r\n      <div data-testid=\"OrderDetails-info-about-seller\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          Info about seller\r\n        </Heading>\r\n        {seller ? (\r\n          <FlexWrapper direction=\"column\" spacing=\"1\" data-test=\"OrderDetails-seller-info\">\r\n            <div data-testid=\"OrderDetails-seller-username\">\r\n              <PlainText weight=\"700\">Username:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">\r\n                <Link to={`/user/${seller.username}?p=1`} data-testid=\"OrderDetails-seller-link\">\r\n                  <GreenText>{seller.username}</GreenText>\r\n                </Link>\r\n              </PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-email\">\r\n              <PlainText weight=\"700\">Email:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">{seller.email}</PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-phone\">\r\n              <PlainText weight=\"700\">Phone:&nbsp;</PlainText>\r\n              <PlainText size=\"3\">{seller.phone}</PlainText>\r\n            </div>\r\n          </FlexWrapper>\r\n        ) : (\r\n          <i data-testid=\"OrderDetails-seller-deleted\">(account has been deleted)</i>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const deliveryAddressSection = (\r\n      <div data-testid=\"OrderDetails-delivery-address-section\">\r\n        <Heading variant=\"h4\" mgBottom=\"2\">\r\n          Delivery address\r\n        </Heading>\r\n        <DeliveryAddress data={deliveryAddress} />\r\n      </div>\r\n    );\r\n\r\n    const productsSection = (\r\n      <>\r\n        <Heading variant=\"h4\" mgTop=\"3\">\r\n          Products\r\n        </Heading>\r\n        {products.map((product) => (\r\n          <TransactionAndOrderProdItem key={product._id} data={product} orderId={_id} />\r\n        ))}\r\n        <PlainText display=\"block\" mgTop=\"3\" textAlign=\"right\">\r\n          <PlainText color={theme.colors.light4} spacing=\"1px\" mgRight=\"1\">\r\n            TOTAL\r\n          </PlainText>\r\n          <PlainText size=\"5\">{formatPrice(overallPrice)}</PlainText>\r\n        </PlainText>\r\n      </>\r\n    );\r\n\r\n    content = (\r\n      <SC.Wrapper>\r\n        <PlainPanel>\r\n          <FlexWrapper direction=\"column\" spacing=\"3\">\r\n            {generalInfoSection}\r\n            {infoAboutSellerSection}\r\n            {deliveryAddressSection}\r\n          </FlexWrapper>\r\n          {productsSection}\r\n        </PlainPanel>\r\n      </SC.Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor title=\"Order details - E-Shopping\" />\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}