{"version":3,"sources":["components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.sc.js","components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.js","containers/MyAccount/MyAccount.sc.js","containers/MyAccount/MyData/MyData.sc.js","containers/MyAccount/MyData/SingleInfo/SingleInfo.js","containers/MyAccount/MyData/MyData.js","containers/MyAccount/MyProducts/MyProducts.js","components/Orders/OrderList/OrderList.sc.js","components/Orders/OrderList/OrderList.js","components/Orders/SortOrders/SortOrders.js","components/Orders/Orders.js","containers/MyAccount/MySellHistory/MySellHistory.js","containers/MyAccount/MyPlacedOrders/MyPlacedOrders.js","containers/MyAccount/MyAccount.js"],"names":["Wrapper","styled","FlexWrapper","theme","spacings","level3","NameAndPrice","div","level1","fontSizes","durations","colors","green","Price","TransactionAndOrderProdItem","React","memo","data","orderId","productId","_id","name","price","quantity","photo","roundedOverallPrice","roundOverallPrice","spacing","data-testid","to","ProductThumbnail","alt","width","height","className","justify","align","flex","PlainText","size","color","light4","formatPrice","defaultProps","light1","zIndexes","level2","blue","Routes","extraMargin","level5","OrdersWrapper","Link","SingleInfo","content","clickHandler","contentNode","singleInfoNames","ADDRESS","direction","map","value","idx","wordBreak","CONTACTS","email","phone","button","Button","clicked","Heading","variant","undefined","MyData","history","userProfile","useSelector","state","auth","profile","dispatch","useDispatch","onSetModal","useCallback","modalContent","actions","useEffect","scrollToTop","dataAndActions","pendingUserContent","firstName","lastName","username","street","zipCode","city","country","contacts","status","isAdmin","isAccountActive","userStatuses","ACTIVE","adminContent","modalTypes","ADD_ADMIN","REMOVE_ADMIN","pendingUserActions","SEND_VERIFICATION_LINK","push","USERNAME","NAME","CHANGE_NAME","EMAIL","CHANGE_EMAIL","CHANGE_ADDRESS","CHANGE_CONTACTS","PHONE_NUMBER","CHANGE_PHONE_NUMBER","CHANGE_PASSWORD","DELETE_ACCOUNT","PlainPanel","lineHeight","MetaDescriptor","title","description","MyProducts","search","location","lastLocation","useLastLocation","productsPerPage","ui","onFetchProducts","queryParams","pageType","productPages","MY_PRODUCTS","pathname","startsWith","ProductsAndFilters","page","SingleOrder","light3","OrderList","orders","orderType","isDataLoading","orderList","order","orderTypes","PLACED_ORDERS","seller","buyer","userType","fStyle","formatOrderDate","createdAt","products","product","mgTop","mgRight","overallPrice","loadingOverlay","LoadingOverlay","SC","customStyles","control","provided","minHeight","dropdownIndicator","padding","SortOrders","useState","sortOrdersOptions","option","setOption","useHistory","htmlFor","options","onChange","change","parsedQueryParams","getParamsWithoutPollution","sortBy","updatedQueryParams","queryString","stringify","replace","isSearchable","styles","id","Orders","type","useLocation","orderCount","onFetchOrders","Loader","length","InputPagination","itemQuantity","quantityPerPage","defaultOrdersPerPage","BottomPagination","itemsType","listItemTypes","ORDER","MySellHistory","sellHistory","SELL_HISTORY","MyPlacedOrders","placedOrders","MyAccount","navigation","activeClassName","defaultAppPath","routes","path","exact","component","render","props","propTypes","PropTypes","arrayOf","shape","string","isRequired"],"mappings":"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","file":"static/js/6.2f08b329.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport FlexWrapper from '../UI/FlexWrapper';\r\n\r\nexport const Wrapper = styled(FlexWrapper)`\r\n  padding-top: ${({ theme }) => theme.spacings.level3};\r\n\r\n  &:last-child {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const NameAndPrice = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-right: ${({ theme }) => theme.spacings.level1};\r\n  }\r\n\r\n  & .name {\r\n    flex: 2;\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n\r\n    & > a {\r\n      transition: color ${({ theme }) => theme.durations.level1}s;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.green};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    align-items: start;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-right: 0;\r\n      margin-bottom: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n\r\n    & .name {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Price = styled(FlexWrapper)`\r\n  @media only screen and (max-width: 56.25em) {\r\n    flex: initial;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './TransactionAndOrderProdItem.sc';\r\nimport theme from '../../styled/theme';\r\nimport ProductThumbnail from '../UI/ProductThumbnail/ProductThumbnail';\r\nimport PlainText from '../UI/PlainText';\r\nimport { formatPrice, roundOverallPrice } from '../../shared/utility/utility';\r\n\r\nconst TransactionAndOrderProdItem = React.memo(({ data, orderId }) => {\r\n  const { _id: productId, name, price, quantity, photo } = data;\r\n\r\n  const roundedOverallPrice = roundOverallPrice(price * quantity);\r\n\r\n  return (\r\n    <SC.Wrapper spacing=\"2\" data-testid=\"TransactionAndOrderProdItem\">\r\n      <Link\r\n        to={`/product/${productId}`}\r\n        data-testid=\"TransactionAndOrderProdItem-product-link-photo\"\r\n      >\r\n        <ProductThumbnail\r\n          photo={photo}\r\n          alt={name}\r\n          productId={productId}\r\n          width=\"5\"\r\n          height=\"5\"\r\n          orderId={orderId}\r\n        />\r\n      </Link>\r\n      <SC.NameAndPrice>\r\n        <span className=\"name\">\r\n          <Link\r\n            to={`/product/${productId}`}\r\n            data-testid=\"TransactionAndOrderProdItem-product-link-name\"\r\n          >\r\n            {name}\r\n          </Link>\r\n        </span>\r\n        <SC.Price justify=\"space-between\" align=\"center\" flex=\"1\">\r\n          <PlainText\r\n            size=\"2\"\r\n            color={theme.colors.light4}\r\n            data-testid=\"TransactionAndOrderProdItem-product-price-per-piece\"\r\n          >\r\n            {`${quantity} x ${formatPrice(price)}`}\r\n          </PlainText>\r\n          <PlainText size=\"4\" data-testid=\"TransactionAndOrderProdItem-product-overall-price\">\r\n            {formatPrice(roundedOverallPrice)}\r\n          </PlainText>\r\n        </SC.Price>\r\n      </SC.NameAndPrice>\r\n    </SC.Wrapper>\r\n  );\r\n});\r\n\r\nTransactionAndOrderProdItem.defaultProps = {\r\n  orderId: '',\r\n};\r\n\r\nTransactionAndOrderProdItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    photo: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  orderId: PropTypes.string,\r\n};\r\n\r\nexport default TransactionAndOrderProdItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  & .nav {\r\n    background-color: ${({ theme }) => theme.colors.light1};\r\n    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\r\n    left: 0;\r\n    padding-bottom: ${({ theme }) => theme.spacings.level1};\r\n    position: fixed;\r\n    top: 6.2rem;\r\n    width: 100%;\r\n    z-index: ${({ theme }) => theme.zIndexes.level3};\r\n  }\r\n\r\n  & .nav-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style: none;\r\n  }\r\n\r\n  & .nav-link {\r\n    border-bottom: 2px solid transparent;\r\n    display: block;\r\n    font-size: ${({ theme }) => theme.fontSizes.level2};\r\n    letter-spacing: 1px;\r\n    padding: ${({ theme }) => theme.spacings.level2};\r\n    text-transform: uppercase;\r\n    transition: all ${({ theme }) => theme.durations.level1}s;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.green};\r\n    }\r\n  }\r\n\r\n  & .nav-link-active {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n    color: ${({ theme }) => theme.colors.blue};\r\n    cursor: default;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.blue};\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    & .nav {\r\n      top: 10.8rem;\r\n    }\r\n\r\n    & .nav-list {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 24.5em) {\r\n    & .nav-link {\r\n      letter-spacing: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 22.5em) {\r\n    & .nav-link {\r\n      font-size: ${({ theme }) => theme.fontSizes.level1};\r\n      padding: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Routes = styled.div`\r\n  ${({ extraMargin, theme }) => {\r\n    if (extraMargin) {\r\n      return `\r\n        margin-top: ${theme.spacings.level5};\r\n      `;\r\n    }\r\n    return ``;\r\n  }}\r\n`;\r\n\r\nexport const OrdersWrapper = styled.div`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  width: 80rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: ${({ theme }) => theme.spacings.level3};\r\n  grid-template-columns: repeat(3, 1fr);\r\n\r\n  & .change-passwd-btn {\r\n    grid-area: 3 / 2 / 3 / 3;\r\n  }\r\n\r\n  & .actions {\r\n    grid-column: 1 / -1;\r\n  }\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    & .change-passwd-btn {\r\n      grid-area: 4 / 1 / 4 / 3;\r\n    }\r\n\r\n    & .actions > * {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PendingUserLogoutBtn = styled(Link)`\r\n  @media only screen and (max-width: 37.5em) {\r\n    & > * {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../../../components/UI/Button/Button';\r\nimport Heading from '../../../../components/UI/Heading/Heading';\r\nimport { singleInfoNames } from '../../../../shared/constants';\r\nimport FlexWrapper from '../../../../components/UI/FlexWrapper';\r\nimport PlainText from '../../../../components/UI/PlainText';\r\n\r\nexport default function SingleInfo({ name, content, clickHandler }) {\r\n  let contentNode = '';\r\n  if (name === singleInfoNames.ADDRESS) {\r\n    contentNode = (\r\n      <FlexWrapper direction=\"column\" spacing=\"1\">\r\n        {content.map((value, idx) => (\r\n          <PlainText key={idx} size=\"3\" wordBreak=\"break-all\">\r\n            {value}\r\n          </PlainText>\r\n        ))}\r\n      </FlexWrapper>\r\n    );\r\n  } else if (name === singleInfoNames.CONTACTS) {\r\n    contentNode = (\r\n      <FlexWrapper direction=\"column\" spacing=\"1\">\r\n        <PlainText size=\"3\" wordBreak=\"break-all\">\r\n          Email:&nbsp;\r\n          {content.email ? 'visible' : 'hidden'}\r\n        </PlainText>\r\n        <PlainText size=\"3\" wordBreak=\"break-all\">\r\n          Phone number:&nbsp;\r\n          {content.phone ? 'visible' : 'hidden'}\r\n        </PlainText>\r\n      </FlexWrapper>\r\n    );\r\n  } else {\r\n    contentNode = (\r\n      <PlainText size=\"3\" wordBreak=\"break-all\">\r\n        {content}\r\n      </PlainText>\r\n    );\r\n  }\r\n\r\n  let button = null;\r\n  if (clickHandler) {\r\n    button = (\r\n      <Button clicked={clickHandler} data-testid={`SingleInfo-${name}-btn`}>\r\n        Change\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FlexWrapper direction=\"column\" spacing=\"2\" align=\"start\" data-testid={`SingleInfo-${name}`}>\r\n      <Heading variant=\"h4\">{name}</Heading>\r\n      {contentNode}\r\n      {button}\r\n    </FlexWrapper>\r\n  );\r\n}\r\n\r\nSingleInfo.defaultProps = {\r\n  clickHandler: undefined,\r\n};\r\n\r\nSingleInfo.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.shape({\r\n      email: PropTypes.bool.isRequired,\r\n      phone: PropTypes.bool.isRequired,\r\n    }),\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]).isRequired,\r\n  clickHandler: PropTypes.func,\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as SC from './MyData.sc';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { modalTypes, singleInfoNames, userStatuses } from '../../../shared/constants';\r\nimport PlainPanel from '../../../components/UI/Panels/PlainPanel';\r\nimport FlexWrapper from '../../../components/UI/FlexWrapper';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport SingleInfo from './SingleInfo/SingleInfo';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport PlainText from '../../../components/UI/PlainText';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function MyData({ history }) {\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n\r\n  const dispatch = useDispatch();\r\n  const onSetModal = useCallback(\r\n    (modalContent) => dispatch(actions.setModal(modalContent)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  let dataAndActions = null;\r\n  let pendingUserContent = null;\r\n  if (userProfile) {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n      street,\r\n      zipCode,\r\n      city,\r\n      country,\r\n      phone,\r\n      contacts,\r\n      status,\r\n      isAdmin,\r\n    } = userProfile;\r\n\r\n    const isAccountActive = status === userStatuses.ACTIVE;\r\n\r\n    let adminContent = null;\r\n    if (isAdmin) {\r\n      adminContent = (\r\n        <FlexWrapper\r\n          spacing=\"3\"\r\n          className=\"actions\"\r\n          justify=\"center\"\r\n          data-testid=\"MyData-admin-content\"\r\n        >\r\n          <Button clicked={() => onSetModal(modalTypes.ADD_ADMIN)}>Add admin</Button>\r\n          <Button color=\"red\" clicked={() => onSetModal(modalTypes.REMOVE_ADMIN)}>\r\n            Remove admin\r\n          </Button>\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    let pendingUserActions = null;\r\n    if (!isAccountActive) {\r\n      pendingUserActions = (\r\n        <FlexWrapper\r\n          spacing=\"3\"\r\n          justify=\"center\"\r\n          className=\"actions\"\r\n          data-testid=\"MyData-pending-user-actions\"\r\n        >\r\n          <Button clicked={() => onSetModal(modalTypes.SEND_VERIFICATION_LINK)}>\r\n            Send verification link\r\n          </Button>\r\n          <Button clicked={() => history.push('/logout')}>Logout</Button>\r\n        </FlexWrapper>\r\n      );\r\n    }\r\n\r\n    dataAndActions = (\r\n      <>\r\n        <SingleInfo name={singleInfoNames.USERNAME} content={username} />\r\n        <SingleInfo\r\n          name={singleInfoNames.NAME}\r\n          content={`${firstName} ${lastName}`}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_NAME) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.EMAIL}\r\n          content={email}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_EMAIL) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.ADDRESS}\r\n          content={[street, `${zipCode} ${city}`, country]}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_ADDRESS) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.CONTACTS}\r\n          content={contacts}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_CONTACTS) : null}\r\n        />\r\n        <SingleInfo\r\n          name={singleInfoNames.PHONE_NUMBER}\r\n          content={phone}\r\n          clickHandler={isAccountActive ? () => onSetModal(modalTypes.CHANGE_PHONE_NUMBER) : null}\r\n        />\r\n        {pendingUserActions}\r\n        <FlexWrapper spacing=\"3\" className=\"actions\" justify=\"center\">\r\n          {isAccountActive && (\r\n            <Button clicked={() => onSetModal(modalTypes.CHANGE_PASSWORD)}>Change password</Button>\r\n          )}\r\n          <Button color=\"red\" clicked={() => onSetModal(modalTypes.DELETE_ACCOUNT)}>\r\n            Delete account\r\n          </Button>\r\n        </FlexWrapper>\r\n        {adminContent}\r\n      </>\r\n    );\r\n\r\n    if (!isAccountActive) {\r\n      pendingUserContent = (\r\n        <PlainPanel data-testid=\"MyData-pending-user-content\">\r\n          <PlainText size=\"3\" lineHeight=\"5\">\r\n            You need to activate your account to unlock all app functionalities. Verification link\r\n            is active for 10 minutes. You can resend it below. If you do not activate your account\r\n            within 1 hour, account will be deleted permanently.\r\n          </PlainText>\r\n        </PlainPanel>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor\r\n        title=\"Your account data - E-Shopping\"\r\n        description=\"Check out your account informations\"\r\n      />\r\n      <Heading variant=\"h3\">My data</Heading>\r\n      <FlexWrapper direction=\"column\" spacing=\"3\">\r\n        {pendingUserContent}\r\n        <PlainPanel>\r\n          <SC.Wrapper>{dataAndActions}</SC.Wrapper>\r\n        </PlainPanel>\r\n      </FlexWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { productPages } from '../../../shared/constants';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport ProductsAndFilters from '../../../components/ProductsAndFilters/ProductsAndFilters';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function MyProducts({ userProfile, location }) {\r\n  const { search } = location;\r\n\r\n  const lastLocation = useLastLocation();\r\n\r\n  const productsPerPage = useSelector((state) => state.ui.productsPerPage);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchProducts = useCallback(\r\n    (queryParams, pageType) => dispatch(actions.fetchProducts(queryParams, pageType)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    onFetchProducts(search, productPages.MY_PRODUCTS);\r\n    if (!lastLocation?.pathname.startsWith('/product/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [search, onFetchProducts, productsPerPage, userProfile, lastLocation]);\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor title=\"Your offers - E-Shopping\" description=\"Check out your offers\" />\r\n      <Heading variant=\"h3\">My products</Heading>\r\n      <ProductsAndFilters page={productPages.MY_PRODUCTS} />\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SingleOrder = styled.div`\r\n  padding: ${({ theme }) => theme.spacings.level3} 0;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.light3};\r\n\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './OrderList.sc';\r\nimport theme from '../../../styled/theme';\r\nimport { GreenText } from '../../../styled/components';\r\nimport TransactionAndOrderProdItem from '../../TransactionAndOrderProdItem/TransactionAndOrderProdItem';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport PlainText from '../../UI/PlainText';\r\nimport FlexWrapper from '../../UI/FlexWrapper';\r\nimport Button from '../../UI/Button/Button';\r\nimport LoadingOverlay from '../../UI/LoadingOverlay/LoadingOverlay';\r\nimport { formatPrice, formatOrderDate } from '../../../shared/utility/utility';\r\nimport * as propTypes from '../../../shared/propTypes';\r\n\r\nexport default function OrderList({ orders, orderType }) {\r\n  const isDataLoading = useSelector((state) => state.ui.isDataLoading);\r\n\r\n  const orderList = orders.map((order) => {\r\n    const username =\r\n      orderType === orderTypes.PLACED_ORDERS ? order.seller?.username : order.buyer?.username;\r\n    const userType = orderType === orderTypes.PLACED_ORDERS ? 'seller ' : 'buyer ';\r\n\r\n    return (\r\n      <SC.SingleOrder key={order._id} data-testid=\"OrderList-single-order\">\r\n        <FlexWrapper justify=\"space-between\" align=\"flex-end\" spacing=\"3\">\r\n          <PlainText size=\"3\">\r\n            <span data-testid=\"OrderList-user-type\">{userType}</span>\r\n            {username ? (\r\n              <Link to={`/user/${username}?p=1`} data-testid=\"OrderList-user-link\">\r\n                <GreenText>{username}</GreenText>\r\n              </Link>\r\n            ) : (\r\n              <PlainText fStyle=\"italic\" data-testid=\"OrderList-account-deleted\">\r\n                (account has been deleted)\r\n              </PlainText>\r\n            )}\r\n          </PlainText>\r\n          <PlainText size=\"2\" data-testid=\"OrderList-created-at-date\">\r\n            {formatOrderDate(order.createdAt)}\r\n          </PlainText>\r\n        </FlexWrapper>\r\n        {order.products.map((product) => (\r\n          <TransactionAndOrderProdItem key={product._id} data={product} orderId={order._id} />\r\n        ))}\r\n        <FlexWrapper mgTop=\"3\" justify=\"space-between\" align=\"center\" spacing=\"3\">\r\n          <Link to={`/order/${order._id}`} data-testid=\"OrderList-order-details-link\">\r\n            <Button>details</Button>\r\n          </Link>\r\n          <div>\r\n            <PlainText size=\"3\" mgRight=\"1\" spacing=\"1px\" color={theme.colors.light4}>\r\n              TOTAL\r\n            </PlainText>\r\n            <PlainText size=\"5\" data-testid=\"OrderList-overall-price\">\r\n              {formatPrice(order.overallPrice)}\r\n            </PlainText>\r\n          </div>\r\n        </FlexWrapper>\r\n      </SC.SingleOrder>\r\n    );\r\n  });\r\n\r\n  const loadingOverlay = isDataLoading ? <LoadingOverlay /> : null;\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      {orderList}\r\n      {loadingOverlay}\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n\r\nOrderList.propTypes = {\r\n  orders: PropTypes.arrayOf(PropTypes.shape(propTypes.orderItem)).isRequired,\r\n  orderType: PropTypes.oneOf(Object.values(orderTypes)).isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport queryString from 'query-string';\r\nimport { sortOrdersOptions } from '../../../shared/constants';\r\nimport { getParamsWithoutPollution } from '../../../shared/utility/utility';\r\n\r\nexport const SC = {};\r\nSC.Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  margin-right: ${({ theme }) => theme.spacings.level2};\r\n\r\n  & .label {\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n    margin-right: ${({ theme }) => theme.spacings.level2};\r\n  }\r\n\r\n  & .select {\r\n    font-size: ${({ theme }) => theme.fontSizes.level2};\r\n    flex: 1;\r\n    max-width: 22rem;\r\n    z-index: ${({ theme }) => theme.zIndexes.level2};\r\n  }\r\n`;\r\n\r\nconst customStyles = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    minHeight: '25px',\r\n  }),\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    padding: '0.6rem',\r\n  }),\r\n};\r\n\r\nexport default function SortOrders() {\r\n  const [option, setOption] = useState(sortOrdersOptions[0]);\r\n\r\n  const history = useHistory();\r\n  const { search, pathname } = history.location;\r\n\r\n  const optionChangeHandle = (change) => {\r\n    if (change.value === option.value) return;\r\n    setOption(change);\r\n    const parsedQueryParams = getParamsWithoutPollution(search);\r\n    parsedQueryParams.sortBy = change.value;\r\n    const updatedQueryParams = queryString.stringify(parsedQueryParams);\r\n    history.replace(`${pathname}?${updatedQueryParams}`);\r\n  };\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      <label htmlFor=\"sortOption\" className=\"label\">\r\n        Sort\r\n      </label>\r\n      <Select\r\n        options={sortOrdersOptions}\r\n        value={option}\r\n        onChange={optionChangeHandle}\r\n        isSearchable={false}\r\n        styles={customStyles}\r\n        id=\"sortOption\"\r\n        className=\"select\"\r\n      />\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport PlainPanel from '../UI/Panels/PlainPanel';\r\nimport InputPagination from '../Pagination/InputPagination/InputPagination';\r\nimport BottomPagination from '../Pagination/BottomPagination/BottomPagination';\r\nimport OrderList from './OrderList/OrderList';\r\nimport SortOrders from './SortOrders/SortOrders';\r\nimport Heading from '../UI/Heading/Heading';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport { listItemTypes, orderTypes, defaultOrdersPerPage } from '../../shared/constants';\r\nimport * as propTypes from '../../shared/propTypes';\r\nimport { TopPagination } from '../../styled/components';\r\n\r\nexport default function Orders({ orders, type }) {\r\n  const { search } = useLocation();\r\n\r\n  const orderCount = useSelector((state) => state.auth.orderCount);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOrders = useCallback(\r\n    (queryParams, orderType) => dispatch(actions.fetchOrders(queryParams, orderType)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    onFetchOrders(search, type);\r\n  }, [onFetchOrders, type, search]);\r\n\r\n  let content = <Loader align=\"center\" />;\r\n  if (orders === null) {\r\n    content = (\r\n      <Heading variant=\"h4\" align=\"center\" data-testid=\"Orders-error\">\r\n        {type === orderTypes.PLACED_ORDERS\r\n          ? 'There is a problem to fetch your placed orders'\r\n          : 'There is a problem to fetch your sell history'}\r\n      </Heading>\r\n    );\r\n  } else if (orders) {\r\n    if (orders.length <= 0) {\r\n      content = (\r\n        <Heading variant=\"h4\" align=\"center\" data-testid=\"Orders-no-orders-info\">\r\n          {type === orderTypes.PLACED_ORDERS\r\n            ? `You don't have any placed orders yet`\r\n            : 'Your sell history is empty'}\r\n        </Heading>\r\n      );\r\n    } else if (orderCount > 0) {\r\n      content = (\r\n        <PlainPanel>\r\n          <TopPagination>\r\n            <SortOrders />\r\n            <InputPagination itemQuantity={orderCount} quantityPerPage={defaultOrdersPerPage} />\r\n          </TopPagination>\r\n          <OrderList orders={orders} orderType={type} />\r\n          <BottomPagination\r\n            itemQuantity={orderCount}\r\n            itemsType={listItemTypes.ORDER}\r\n            quantityPerPage={defaultOrdersPerPage}\r\n          />\r\n        </PlainPanel>\r\n      );\r\n    }\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nOrders.propTypes = {\r\n  orders: PropTypes.arrayOf(PropTypes.shape(propTypes.orderItem)),\r\n  type: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport * as SC from '../MyAccount.sc';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport Orders from '../../../components/Orders/Orders';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function MySellHistory() {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const sellHistory = useSelector((state) => state.auth.sellHistory);\r\n\r\n  useEffect(() => {\r\n    if (!lastLocation?.pathname.startsWith('/order/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [lastLocation]);\r\n\r\n  return (\r\n    <SC.OrdersWrapper>\r\n      <MetaDescriptor\r\n        title=\"Your sell history - E-Shopping\"\r\n        description=\"Check out your sell history\"\r\n      />\r\n      <Heading variant=\"h3\">My sell history</Heading>\r\n      <Orders orders={sellHistory} type={orderTypes.SELL_HISTORY} />\r\n    </SC.OrdersWrapper>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport * as SC from '../MyAccount.sc';\r\nimport { orderTypes } from '../../../shared/constants';\r\nimport Orders from '../../../components/Orders/Orders';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport { scrollToTop } from '../../../shared/utility/utility';\r\nimport MetaDescriptor from '../../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function MyPlacedOrders() {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const placedOrders = useSelector((state) => state.auth.placedOrders);\r\n\r\n  useEffect(() => {\r\n    if (!lastLocation?.pathname.startsWith('/order/')) {\r\n      scrollToTop();\r\n    }\r\n  }, [lastLocation]);\r\n\r\n  return (\r\n    <SC.OrdersWrapper>\r\n      <MetaDescriptor\r\n        title=\"Your placed orders - E-Shopping\"\r\n        description=\"Check out orders that you placed\"\r\n      />\r\n      <Heading variant=\"h3\">My placed orders</Heading>\r\n      <Orders orders={placedOrders} type={orderTypes.PLACED_ORDERS} />\r\n    </SC.OrdersWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink, Switch, Route, Redirect } from 'react-router-dom';\r\nimport * as SC from './MyAccount.sc';\r\nimport MyData from './MyData/MyData';\r\nimport MyProducts from './MyProducts/MyProducts';\r\nimport MySellHistory from './MySellHistory/MySellHistory';\r\nimport MyPlacedOrders from './MyPlacedOrders/MyPlacedOrders';\r\nimport { defaultAppPath, userStatuses } from '../../shared/constants';\r\n\r\nexport default function MyAccount() {\r\n  const userProfile = useSelector((state) => state.auth.profile);\r\n\r\n  let navigation = null;\r\n  if (userProfile.status === userStatuses.ACTIVE) {\r\n    navigation = (\r\n      <nav className=\"nav\" data-testid=\"MyAccount-navigation\">\r\n        <ul className=\"nav-list\">\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/data\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-data-link\"\r\n            >\r\n              Data\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/my-account${defaultAppPath}`}\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-products-link\"\r\n            >\r\n              Products\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/sell-history?p=1\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-sell-history-link\"\r\n            >\r\n              Sell history\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/my-account/placed-orders?p=1\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link-active\"\r\n              data-testid=\"MyAccount-placed-orders-link\"\r\n            >\r\n              Placed orders\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  let routes = (\r\n    <SC.Routes extraMargin={false} data-testid=\"MyAccount-pending-user-routes\">\r\n      <Switch>\r\n        <Route path=\"/my-account/data\" exact component={MyData} />\r\n        <Redirect to=\"/my-account/data\" />\r\n      </Switch>\r\n    </SC.Routes>\r\n  );\r\n  if (userProfile.status === userStatuses.ACTIVE) {\r\n    routes = (\r\n      <SC.Routes extraMargin data-testid=\"MyAccount-active-user-routes\">\r\n        <Switch>\r\n          <Route path=\"/my-account/data\" exact component={MyData} />\r\n          <Route\r\n            path=\"/my-account/products\"\r\n            exact\r\n            render={(props) => <MyProducts userProfile={userProfile} {...props} />}\r\n          />\r\n          <Route path=\"/my-account/sell-history\" exact component={MySellHistory} />\r\n          <Route path=\"/my-account/placed-orders\" exact component={MyPlacedOrders} />\r\n          <Redirect to=\"/my-account/data\" />\r\n        </Switch>\r\n      </SC.Routes>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SC.Wrapper>\r\n      {navigation}\r\n      {routes}\r\n    </SC.Wrapper>\r\n  );\r\n}\r\n"],"sourceRoot":""}