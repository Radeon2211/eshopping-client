{"version":3,"file":"static/js/213.6034441a.chunk.js","mappings":"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","sources":["components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.sc.js","components/TransactionAndOrderProdItem/TransactionAndOrderProdItem.js","components/UI/DeliveryAddress/DeliveryAddress.js","containers/OrderDetails/OrderDetails.sc.js","containers/OrderDetails/OrderDetails.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: ${({ theme }) => theme.spacings.level3};\r\n`;\r\n\r\nexport const NameAndPrice = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-right: ${({ theme }) => theme.spacings.level1};\r\n  }\r\n\r\n  & .name {\r\n    flex: 2;\r\n    font-size: ${({ theme }) => theme.fontSizes.level3};\r\n\r\n    & > a {\r\n      transition: color ${({ theme }) => theme.durations.level1}s;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.green};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    align-items: start;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-right: 0;\r\n      margin-bottom: ${({ theme }) => theme.spacings.level1};\r\n    }\r\n\r\n    & .name {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SC from './TransactionAndOrderProdItem.sc';\r\nimport theme from '../../styled/theme';\r\nimport ProductThumbnail from '../UI/ProductThumbnail/ProductThumbnail';\r\nimport PlainText from '../UI/PlainText';\r\nimport { formatPrice, roundOverallPrice } from '../../shared/utility/utility';\r\nimport FlexWrapper from '../UI/FlexWrapper';\r\n\r\nconst TransactionAndOrderProdItem = React.memo(({ data, orderId }) => {\r\n  const { _id: productId, name, price, quantity, photo } = data;\r\n\r\n  const roundedOverallPrice = roundOverallPrice(price * quantity);\r\n\r\n  return (\r\n    <SC.Wrapper data-testid=\"TransactionAndOrderProdItem\">\r\n      <FlexWrapper $spacing=\"2\">\r\n        <Link\r\n          to={`/product/${productId}`}\r\n          data-testid=\"TransactionAndOrderProdItem-product-link-photo\"\r\n        >\r\n          <ProductThumbnail\r\n            photo={photo}\r\n            alt={name}\r\n            productId={productId}\r\n            width=\"5\"\r\n            height=\"5\"\r\n            orderId={orderId}\r\n          />\r\n        </Link>\r\n        <SC.NameAndPrice>\r\n          <span className=\"name\">\r\n            <Link\r\n              to={`/product/${productId}`}\r\n              data-testid=\"TransactionAndOrderProdItem-product-link-name\"\r\n            >\r\n              {name}\r\n            </Link>\r\n          </span>\r\n          <FlexWrapper $justify=\"space-between\" $align=\"center\" $flex=\"1\">\r\n            <PlainText\r\n              $size=\"2\"\r\n              $color={theme.colors.light4}\r\n              data-testid=\"TransactionAndOrderProdItem-product-price-per-piece\"\r\n            >\r\n              {`${quantity} x ${formatPrice(price)}`}\r\n            </PlainText>\r\n            <PlainText $size=\"4\" data-testid=\"TransactionAndOrderProdItem-product-overall-price\">\r\n              {formatPrice(roundedOverallPrice)}\r\n            </PlainText>\r\n          </FlexWrapper>\r\n        </SC.NameAndPrice>\r\n      </FlexWrapper>\r\n    </SC.Wrapper>\r\n  );\r\n});\r\n\r\nTransactionAndOrderProdItem.defaultProps = {\r\n  orderId: '',\r\n};\r\n\r\nTransactionAndOrderProdItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    photo: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  orderId: PropTypes.string,\r\n};\r\n\r\nexport default TransactionAndOrderProdItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FlexWrapper from '../FlexWrapper';\r\nimport PlainText from '../PlainText';\r\nimport * as propTypes from '../../../shared/propTypes';\r\n\r\nexport default function DeliveryAddress({ data }) {\r\n  const { firstName, lastName, street, zipCode, city, country, phone } = data;\r\n\r\n  const rowValues = [`${firstName} ${lastName}`, street, `${zipCode} ${city}`, country, phone];\r\n\r\n  return (\r\n    <FlexWrapper $direction=\"column\" $spacing=\"1\">\r\n      {rowValues.map((value, idx) => (\r\n        <PlainText key={idx} $size=\"3\" $wordBreak=\"break-all\">\r\n          {value}\r\n        </PlainText>\r\n      ))}\r\n    </FlexWrapper>\r\n  );\r\n}\r\n\r\nDeliveryAddress.propTypes = {\r\n  data: PropTypes.shape(propTypes.deliveryAddressStrings).isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Wrapper = styled.div`\r\n  font-size: ${({ theme }) => theme.fontSizes.level3};\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  width: 80rem;\r\n`;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport * as SC from './OrderDetails.sc';\r\nimport PlainPanel from '../../components/UI/Panels/PlainPanel';\r\nimport Heading from '../../components/UI/Heading/Heading';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport PlainText from '../../components/UI/PlainText';\r\nimport FlexWrapper from '../../components/UI/FlexWrapper';\r\nimport TransactionAndOrderProdItem from '../../components/TransactionAndOrderProdItem/TransactionAndOrderProdItem';\r\nimport DeliveryAddress from '../../components/UI/DeliveryAddress/DeliveryAddress';\r\nimport { formatOrderDate, formatPrice, scrollToTop } from '../../shared/utility/utility';\r\nimport { GreenText } from '../../styled/components';\r\nimport theme from '../../styled/theme';\r\nimport MetaDescriptor from '../../components/MetaDescriptor/MetaDescriptor';\r\n\r\nexport default function OrderDetails() {\r\n  const { id: orderId } = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.auth.orderDetails);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFetchOrderDetails = useCallback(\r\n    (id) => dispatch(actions.fetchOrderDetails(id)),\r\n    [dispatch],\r\n  );\r\n  const onSetOrderDetails = useCallback(() => dispatch(actions.setOrderDetails()), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onFetchOrderDetails(orderId);\r\n    scrollToTop();\r\n    return () => onSetOrderDetails();\r\n  }, [orderId, onFetchOrderDetails, onSetOrderDetails]);\r\n\r\n  let content = <Loader align=\"center\" />;\r\n  if (orderDetails === null) {\r\n    content = (\r\n      <Heading $variant=\"h4\" $align=\"center\" $lineHeight=\"4\" data-testid=\"OrderDetails-error\">\r\n        There is a problem to fetch order details or given order does not exist\r\n      </Heading>\r\n    );\r\n  } else if (orderDetails) {\r\n    const { _id, seller, buyer, deliveryAddress, products, overallPrice, createdAt } = orderDetails;\r\n\r\n    const generalInfoSection = (\r\n      <div data-testid=\"OrderDetails-general-info-section\">\r\n        <Heading $variant=\"h4\" $mgBottom=\"2\">\r\n          General info\r\n        </Heading>\r\n        <FlexWrapper $direction=\"column\" $spacing=\"1\">\r\n          <div>\r\n            <PlainText $weight=\"700\">Order number:&nbsp;</PlainText>\r\n            <PlainText $size=\"3\">{_id}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText $weight=\"700\">Transaction date:&nbsp;</PlainText>\r\n            <PlainText $size=\"3\">{formatOrderDate(createdAt)}</PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText $weight=\"700\">Buyer:&nbsp;</PlainText>\r\n            <PlainText $size=\"3\">\r\n              {buyer ? (\r\n                <Link to={`/user/${buyer.username}?p=1`} data-testid=\"OrderDetails-buyer-link\">\r\n                  <GreenText>{buyer.username}</GreenText>\r\n                </Link>\r\n              ) : (\r\n                <i data-testid=\"OrderDetails-buyer-deleted\">(account has been deleted)</i>\r\n              )}\r\n            </PlainText>\r\n          </div>\r\n        </FlexWrapper>\r\n      </div>\r\n    );\r\n\r\n    const infoAboutSellerSection = (\r\n      <div data-testid=\"OrderDetails-info-about-seller\">\r\n        <Heading $variant=\"h4\" $mgBottom=\"2\">\r\n          Info about seller\r\n        </Heading>\r\n        {seller ? (\r\n          <FlexWrapper $direction=\"column\" $spacing=\"1\" data-test=\"OrderDetails-seller-info\">\r\n            <div data-testid=\"OrderDetails-seller-username\">\r\n              <PlainText $weight=\"700\">Username:&nbsp;</PlainText>\r\n              <PlainText $size=\"3\">\r\n                <Link to={`/user/${seller.username}?p=1`} data-testid=\"OrderDetails-seller-link\">\r\n                  <GreenText>{seller.username}</GreenText>\r\n                </Link>\r\n              </PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-email\">\r\n              <PlainText $weight=\"700\">Email:&nbsp;</PlainText>\r\n              <PlainText $size=\"3\">{seller.email}</PlainText>\r\n            </div>\r\n            <div data-testid=\"OrderDetails-seller-phone\">\r\n              <PlainText $weight=\"700\">Phone:&nbsp;</PlainText>\r\n              <PlainText $size=\"3\">{seller.phone}</PlainText>\r\n            </div>\r\n          </FlexWrapper>\r\n        ) : (\r\n          <i data-testid=\"OrderDetails-seller-deleted\">(account has been deleted)</i>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const deliveryAddressSection = (\r\n      <div data-testid=\"OrderDetails-delivery-address-section\">\r\n        <Heading $variant=\"h4\" $mgBottom=\"2\">\r\n          Delivery address\r\n        </Heading>\r\n        <DeliveryAddress data={deliveryAddress} />\r\n      </div>\r\n    );\r\n\r\n    const productsSection = (\r\n      <>\r\n        <Heading $variant=\"h4\" $mgTop=\"3\">\r\n          Products\r\n        </Heading>\r\n        {products.map((product) => (\r\n          <TransactionAndOrderProdItem key={product._id} data={product} orderId={_id} />\r\n        ))}\r\n        <PlainText $display=\"block\" $mgTop=\"3\" $textAlign=\"right\">\r\n          <PlainText $color={theme.colors.light4} $spacing=\"1px\" $mgRight=\"1\">\r\n            TOTAL\r\n          </PlainText>\r\n          <PlainText $size=\"5\">{formatPrice(overallPrice)}</PlainText>\r\n        </PlainText>\r\n      </>\r\n    );\r\n\r\n    content = (\r\n      <SC.Wrapper>\r\n        <PlainPanel>\r\n          <FlexWrapper $direction=\"column\" $spacing=\"3\">\r\n            {generalInfoSection}\r\n            {infoAboutSellerSection}\r\n            {deliveryAddressSection}\r\n          </FlexWrapper>\r\n          {productsSection}\r\n        </PlainPanel>\r\n      </SC.Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MetaDescriptor title=\"Order details - E-Shopping\" />\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","spacings","level3","NameAndPrice","_templateObject2","_ref2","level1","_ref3","fontSizes","_ref4","durations","_ref5","colors","green","_ref6","TransactionAndOrderProdItem","React","data","orderId","_id","productId","name","price","quantity","photo","roundedOverallPrice","roundOverallPrice","_jsx","SC","children","_jsxs","FlexWrapper","$spacing","Link","to","concat","ProductThumbnail","alt","width","height","className","$justify","$align","$flex","PlainText","$size","$color","light4","formatPrice","defaultProps","DeliveryAddress","firstName","lastName","street","zipCode","city","country","phone","rowValues","$direction","map","value","idx","$wordBreak","OrderDetails","id","useParams","orderDetails","useSelector","state","auth","dispatch","useDispatch","onFetchOrderDetails","useCallback","actions","onSetOrderDetails","useEffect","scrollToTop","content","Loader","align","Heading","$variant","$lineHeight","seller","buyer","deliveryAddress","products","overallPrice","createdAt","generalInfoSection","$mgBottom","$weight","formatOrderDate","username","GreenText","infoAboutSellerSection","email","deliveryAddressSection","productsSection","_Fragment","$mgTop","product","$display","$textAlign","$mgRight","PlainPanel","MetaDescriptor","title"],"sourceRoot":""}